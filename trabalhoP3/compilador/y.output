   0  $accept : ProgG $end

   1  ProgG : ProgG Se
   2        | ProgG Enq
   3        | ProgG Atrib ';'
   4        | ProgG VAR '=' Expr ';'
   5        | ProgG VAR '[' NUM ']' '=' Expr ';'
   6        | ProgG CriaFun
   7        | ProgG Funcao ';'
   8        | ProgG ';'
   9        | ProgG COM
  10        |

  11  ProgF : ProgF Se
  12        | ProgF Enq
  13        | ProgF Atrib ';'
  14        | ProgF VAR '=' Expr ';'
  15        | ProgF VAR '[' NUM ']' '=' Expr ';'
  16        | ProgF Funcao ';'
  17        | ProgF ';'
  18        | ProgF COM
  19        | ProgF RETURN Expr ';'
  20        |

  21  Prog : Prog Se
  22       | Prog Enq
  23       | Prog Atrib ';'
  24       | Prog VAR '=' Expr ';'
  25       | Prog VAR '[' NUM ']' '=' Expr ';'
  26       | Prog Funcao ';'
  27       | Prog ';'
  28       | Prog COM
  29       |

  30  Funcao : VAR Lexpr

  31  CriaFun : TIPO VAR '('
  32          | Ltipo '{' ProgF '}'

  33  Atrib : TIPO VAR
  34        | TIPO VAR '[' NUM ']'
  35        | Igual

  36  Igual : TIPO VAR '='
  37        | Igual Expr

  38  Lexpr : '(' ')'
  39        | '(' Eexpr ')'

  40  Eexpr : Expr
  41        | Eexpr ',' Expr

  42  Ltipo : ')'
  43        | Etipo ')'

  44  Etipo : TIPO VAR
  45        | Etipo ',' TIPO VAR

  46  Se : SE Cond
  47     | Se '{' Prog '}' SENAO
  48     | Se '{' Prog '}'

  49  Enq : ENQ
  50      | Enq Cond
  51      | Enq '{' Prog '}'

  52  Cond : NUM
  53       | '(' Expr EQ Expr ')'
  54       | '(' Expr NEQ Expr ')'
  55       | '(' Expr '<' Expr ')'
  56       | '(' Expr '>' Expr ')'
  57       | '(' Expr LEQ Expr ')'
  58       | '(' Expr GEQ Expr ')'
  59       | '(' Cond E Cond ')'
  60       | '(' Cond OU Cond ')'
  61       | '!' Cond

  62  Sexpr : VAR
  63        | NUM
  64        | FLOAT
  65        | VAR '[' Expr ']'
  66        | Funcao
  67        | STR

  68  Expr : '(' Expr '+' Expr ')'
  69       | '(' Expr '-' Expr ')'
  70       | '(' Expr '*' Expr ')'
  71       | '(' Expr '/' Expr ')'
  72       | '(' Expr '%' Expr ')'
  73       | '(' Expr ')'
  74       | Sexpr

state 0
	$accept : . ProgG $end  (0)
	ProgG : .  (10)

	.  reduce 10

	ProgG  goto 1


state 1
	$accept : ProgG . $end  (0)
	ProgG : ProgG . Se  (1)
	ProgG : ProgG . Enq  (2)
	ProgG : ProgG . Atrib ';'  (3)
	ProgG : ProgG . VAR '=' Expr ';'  (4)
	ProgG : ProgG . VAR '[' NUM ']' '=' Expr ';'  (5)
	ProgG : ProgG . CriaFun  (6)
	ProgG : ProgG . Funcao ';'  (7)
	ProgG : ProgG . ';'  (8)
	ProgG : ProgG . COM  (9)

	$end  accept
	SE  shift 2
	ENQ  shift 3
	VAR  shift 4
	TIPO  shift 5
	COM  shift 6
	';'  shift 7
	')'  shift 8
	.  error

	Atrib  goto 9
	Se  goto 10
	Ltipo  goto 11
	Funcao  goto 12
	Enq  goto 13
	CriaFun  goto 14
	Igual  goto 15
	Etipo  goto 16


state 2
	Se : SE . Cond  (46)

	NUM  shift 17
	'('  shift 18
	'!'  shift 19
	.  error

	Cond  goto 20


state 3
	Enq : ENQ .  (49)

	.  reduce 49


state 4
	ProgG : ProgG VAR . '=' Expr ';'  (4)
	ProgG : ProgG VAR . '[' NUM ']' '=' Expr ';'  (5)
	Funcao : VAR . Lexpr  (30)

	'='  shift 21
	'['  shift 22
	'('  shift 23
	.  error

	Lexpr  goto 24


state 5
	CriaFun : TIPO . VAR '('  (31)
	Atrib : TIPO . VAR  (33)
	Atrib : TIPO . VAR '[' NUM ']'  (34)
	Igual : TIPO . VAR '='  (36)
	Etipo : TIPO . VAR  (44)

	VAR  shift 25
	.  error


state 6
	ProgG : ProgG COM .  (9)

	.  reduce 9


state 7
	ProgG : ProgG ';' .  (8)

	.  reduce 8


state 8
	Ltipo : ')' .  (42)

	.  reduce 42


state 9
	ProgG : ProgG Atrib . ';'  (3)

	';'  shift 26
	.  error


state 10
	ProgG : ProgG Se .  (1)
	Se : Se . '{' Prog '}' SENAO  (47)
	Se : Se . '{' Prog '}'  (48)

	'{'  shift 27
	$end  reduce 1
	SE  reduce 1
	ENQ  reduce 1
	VAR  reduce 1
	TIPO  reduce 1
	COM  reduce 1
	';'  reduce 1
	')'  reduce 1


state 11
	CriaFun : Ltipo . '{' ProgF '}'  (32)

	'{'  shift 28
	.  error


state 12
	ProgG : ProgG Funcao . ';'  (7)

	';'  shift 29
	.  error


state 13
	ProgG : ProgG Enq .  (2)
	Enq : Enq . Cond  (50)
	Enq : Enq . '{' Prog '}'  (51)

	NUM  shift 17
	'('  shift 18
	'{'  shift 30
	'!'  shift 19
	$end  reduce 2
	SE  reduce 2
	ENQ  reduce 2
	VAR  reduce 2
	TIPO  reduce 2
	COM  reduce 2
	';'  reduce 2
	')'  reduce 2

	Cond  goto 31


state 14
	ProgG : ProgG CriaFun .  (6)

	.  reduce 6


state 15
	Atrib : Igual .  (35)
	Igual : Igual . Expr  (37)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	';'  reduce 35

	Funcao  goto 37
	Expr  goto 38
	Sexpr  goto 39


state 16
	Ltipo : Etipo . ')'  (43)
	Etipo : Etipo . ',' TIPO VAR  (45)

	')'  shift 40
	','  shift 41
	.  error


state 17
	Cond : NUM .  (52)

	.  reduce 52


state 18
	Cond : '(' . Expr EQ Expr ')'  (53)
	Cond : '(' . Expr NEQ Expr ')'  (54)
	Cond : '(' . Expr '<' Expr ')'  (55)
	Cond : '(' . Expr '>' Expr ')'  (56)
	Cond : '(' . Expr LEQ Expr ')'  (57)
	Cond : '(' . Expr GEQ Expr ')'  (58)
	Cond : '(' . Cond E Cond ')'  (59)
	Cond : '(' . Cond OU Cond ')'  (60)

	VAR  shift 32
	NUM  shift 42
	FLOAT  shift 34
	STR  shift 35
	'('  shift 43
	'!'  shift 19
	.  error

	Cond  goto 44
	Funcao  goto 37
	Expr  goto 45
	Sexpr  goto 39


state 19
	Cond : '!' . Cond  (61)

	NUM  shift 17
	'('  shift 18
	'!'  shift 19
	.  error

	Cond  goto 46


state 20
	Se : SE Cond .  (46)

	.  reduce 46


state 21
	ProgG : ProgG VAR '=' . Expr ';'  (4)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 47
	Sexpr  goto 39


state 22
	ProgG : ProgG VAR '[' . NUM ']' '=' Expr ';'  (5)

	NUM  shift 48
	.  error


state 23
	Lexpr : '(' . ')'  (38)
	Lexpr : '(' . Eexpr ')'  (39)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	')'  shift 49
	.  error

	Eexpr  goto 50
	Funcao  goto 37
	Expr  goto 51
	Sexpr  goto 39


state 24
	Funcao : VAR Lexpr .  (30)

	.  reduce 30


state 25
	CriaFun : TIPO VAR . '('  (31)
	Atrib : TIPO VAR .  (33)
	Atrib : TIPO VAR . '[' NUM ']'  (34)
	Igual : TIPO VAR . '='  (36)
	Etipo : TIPO VAR .  (44)

	'='  shift 52
	'['  shift 53
	'('  shift 54
	';'  reduce 33
	')'  reduce 44
	','  reduce 44


state 26
	ProgG : ProgG Atrib ';' .  (3)

	.  reduce 3


state 27
	Se : Se '{' . Prog '}' SENAO  (47)
	Se : Se '{' . Prog '}'  (48)
	Prog : .  (29)

	.  reduce 29

	Prog  goto 55


state 28
	CriaFun : Ltipo '{' . ProgF '}'  (32)
	ProgF : .  (20)

	.  reduce 20

	ProgF  goto 56


state 29
	ProgG : ProgG Funcao ';' .  (7)

	.  reduce 7


state 30
	Enq : Enq '{' . Prog '}'  (51)
	Prog : .  (29)

	.  reduce 29

	Prog  goto 57


state 31
	Enq : Enq Cond .  (50)

	.  reduce 50


32: shift/reduce conflict (shift 23, reduce 62) on '('
state 32
	Funcao : VAR . Lexpr  (30)
	Sexpr : VAR .  (62)
	Sexpr : VAR . '[' Expr ']'  (65)

	'['  shift 58
	'('  shift 23
	VAR  reduce 62
	NUM  reduce 62
	FLOAT  reduce 62
	EQ  reduce 62
	NEQ  reduce 62
	LEQ  reduce 62
	GEQ  reduce 62
	STR  reduce 62
	';'  reduce 62
	']'  reduce 62
	')'  reduce 62
	','  reduce 62
	'<'  reduce 62
	'>'  reduce 62
	'+'  reduce 62
	'-'  reduce 62
	'*'  reduce 62
	'/'  reduce 62
	'%'  reduce 62

	Lexpr  goto 24


state 33
	Sexpr : NUM .  (63)

	.  reduce 63


state 34
	Sexpr : FLOAT .  (64)

	.  reduce 64


state 35
	Sexpr : STR .  (67)

	.  reduce 67


state 36
	Expr : '(' . Expr '+' Expr ')'  (68)
	Expr : '(' . Expr '-' Expr ')'  (69)
	Expr : '(' . Expr '*' Expr ')'  (70)
	Expr : '(' . Expr '/' Expr ')'  (71)
	Expr : '(' . Expr '%' Expr ')'  (72)
	Expr : '(' . Expr ')'  (73)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 59
	Sexpr  goto 39


state 37
	Sexpr : Funcao .  (66)

	.  reduce 66


state 38
	Igual : Igual Expr .  (37)

	.  reduce 37


state 39
	Expr : Sexpr .  (74)

	.  reduce 74


state 40
	Ltipo : Etipo ')' .  (43)

	.  reduce 43


state 41
	Etipo : Etipo ',' . TIPO VAR  (45)

	TIPO  shift 60
	.  error


state 42
	Cond : NUM .  (52)
	Sexpr : NUM .  (63)

	EQ  reduce 63
	NEQ  reduce 63
	LEQ  reduce 63
	GEQ  reduce 63
	E  reduce 52
	OU  reduce 52
	')'  reduce 63
	'<'  reduce 63
	'>'  reduce 63
	'+'  reduce 63
	'-'  reduce 63
	'*'  reduce 63
	'/'  reduce 63
	'%'  reduce 63


state 43
	Cond : '(' . Expr EQ Expr ')'  (53)
	Cond : '(' . Expr NEQ Expr ')'  (54)
	Cond : '(' . Expr '<' Expr ')'  (55)
	Cond : '(' . Expr '>' Expr ')'  (56)
	Cond : '(' . Expr LEQ Expr ')'  (57)
	Cond : '(' . Expr GEQ Expr ')'  (58)
	Cond : '(' . Cond E Cond ')'  (59)
	Cond : '(' . Cond OU Cond ')'  (60)
	Expr : '(' . Expr '+' Expr ')'  (68)
	Expr : '(' . Expr '-' Expr ')'  (69)
	Expr : '(' . Expr '*' Expr ')'  (70)
	Expr : '(' . Expr '/' Expr ')'  (71)
	Expr : '(' . Expr '%' Expr ')'  (72)
	Expr : '(' . Expr ')'  (73)

	VAR  shift 32
	NUM  shift 42
	FLOAT  shift 34
	STR  shift 35
	'('  shift 43
	'!'  shift 19
	.  error

	Cond  goto 44
	Funcao  goto 37
	Expr  goto 61
	Sexpr  goto 39


state 44
	Cond : '(' Cond . E Cond ')'  (59)
	Cond : '(' Cond . OU Cond ')'  (60)

	E  shift 62
	OU  shift 63
	.  error


state 45
	Cond : '(' Expr . EQ Expr ')'  (53)
	Cond : '(' Expr . NEQ Expr ')'  (54)
	Cond : '(' Expr . '<' Expr ')'  (55)
	Cond : '(' Expr . '>' Expr ')'  (56)
	Cond : '(' Expr . LEQ Expr ')'  (57)
	Cond : '(' Expr . GEQ Expr ')'  (58)

	EQ  shift 64
	NEQ  shift 65
	LEQ  shift 66
	GEQ  shift 67
	'<'  shift 68
	'>'  shift 69
	.  error


state 46
	Cond : '!' Cond .  (61)

	.  reduce 61


state 47
	ProgG : ProgG VAR '=' Expr . ';'  (4)

	';'  shift 70
	.  error


state 48
	ProgG : ProgG VAR '[' NUM . ']' '=' Expr ';'  (5)

	']'  shift 71
	.  error


state 49
	Lexpr : '(' ')' .  (38)

	.  reduce 38


state 50
	Lexpr : '(' Eexpr . ')'  (39)
	Eexpr : Eexpr . ',' Expr  (41)

	')'  shift 72
	','  shift 73
	.  error


state 51
	Eexpr : Expr .  (40)

	.  reduce 40


state 52
	Igual : TIPO VAR '=' .  (36)

	.  reduce 36


state 53
	Atrib : TIPO VAR '[' . NUM ']'  (34)

	NUM  shift 74
	.  error


state 54
	CriaFun : TIPO VAR '(' .  (31)

	.  reduce 31


state 55
	Prog : Prog . Se  (21)
	Prog : Prog . Enq  (22)
	Prog : Prog . Atrib ';'  (23)
	Prog : Prog . VAR '=' Expr ';'  (24)
	Prog : Prog . VAR '[' NUM ']' '=' Expr ';'  (25)
	Prog : Prog . Funcao ';'  (26)
	Prog : Prog . ';'  (27)
	Prog : Prog . COM  (28)
	Se : Se '{' Prog . '}' SENAO  (47)
	Se : Se '{' Prog . '}'  (48)

	SE  shift 2
	ENQ  shift 3
	VAR  shift 75
	TIPO  shift 76
	COM  shift 77
	';'  shift 78
	'}'  shift 79
	.  error

	Atrib  goto 80
	Se  goto 81
	Funcao  goto 82
	Enq  goto 83
	Igual  goto 15


state 56
	ProgF : ProgF . Se  (11)
	ProgF : ProgF . Enq  (12)
	ProgF : ProgF . Atrib ';'  (13)
	ProgF : ProgF . VAR '=' Expr ';'  (14)
	ProgF : ProgF . VAR '[' NUM ']' '=' Expr ';'  (15)
	ProgF : ProgF . Funcao ';'  (16)
	ProgF : ProgF . ';'  (17)
	ProgF : ProgF . COM  (18)
	ProgF : ProgF . RETURN Expr ';'  (19)
	CriaFun : Ltipo '{' ProgF . '}'  (32)

	SE  shift 2
	ENQ  shift 3
	VAR  shift 84
	TIPO  shift 76
	COM  shift 85
	RETURN  shift 86
	';'  shift 87
	'}'  shift 88
	.  error

	Atrib  goto 89
	Se  goto 90
	Funcao  goto 91
	Enq  goto 92
	Igual  goto 15


state 57
	Prog : Prog . Se  (21)
	Prog : Prog . Enq  (22)
	Prog : Prog . Atrib ';'  (23)
	Prog : Prog . VAR '=' Expr ';'  (24)
	Prog : Prog . VAR '[' NUM ']' '=' Expr ';'  (25)
	Prog : Prog . Funcao ';'  (26)
	Prog : Prog . ';'  (27)
	Prog : Prog . COM  (28)
	Enq : Enq '{' Prog . '}'  (51)

	SE  shift 2
	ENQ  shift 3
	VAR  shift 75
	TIPO  shift 76
	COM  shift 77
	';'  shift 78
	'}'  shift 93
	.  error

	Atrib  goto 80
	Se  goto 81
	Funcao  goto 82
	Enq  goto 83
	Igual  goto 15


state 58
	Sexpr : VAR '[' . Expr ']'  (65)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 94
	Sexpr  goto 39


state 59
	Expr : '(' Expr . '+' Expr ')'  (68)
	Expr : '(' Expr . '-' Expr ')'  (69)
	Expr : '(' Expr . '*' Expr ')'  (70)
	Expr : '(' Expr . '/' Expr ')'  (71)
	Expr : '(' Expr . '%' Expr ')'  (72)
	Expr : '(' Expr . ')'  (73)

	')'  shift 95
	'+'  shift 96
	'-'  shift 97
	'*'  shift 98
	'/'  shift 99
	'%'  shift 100
	.  error


state 60
	Etipo : Etipo ',' TIPO . VAR  (45)

	VAR  shift 101
	.  error


state 61
	Cond : '(' Expr . EQ Expr ')'  (53)
	Cond : '(' Expr . NEQ Expr ')'  (54)
	Cond : '(' Expr . '<' Expr ')'  (55)
	Cond : '(' Expr . '>' Expr ')'  (56)
	Cond : '(' Expr . LEQ Expr ')'  (57)
	Cond : '(' Expr . GEQ Expr ')'  (58)
	Expr : '(' Expr . '+' Expr ')'  (68)
	Expr : '(' Expr . '-' Expr ')'  (69)
	Expr : '(' Expr . '*' Expr ')'  (70)
	Expr : '(' Expr . '/' Expr ')'  (71)
	Expr : '(' Expr . '%' Expr ')'  (72)
	Expr : '(' Expr . ')'  (73)

	EQ  shift 64
	NEQ  shift 65
	LEQ  shift 66
	GEQ  shift 67
	')'  shift 95
	'<'  shift 68
	'>'  shift 69
	'+'  shift 96
	'-'  shift 97
	'*'  shift 98
	'/'  shift 99
	'%'  shift 100
	.  error


state 62
	Cond : '(' Cond E . Cond ')'  (59)

	NUM  shift 17
	'('  shift 18
	'!'  shift 19
	.  error

	Cond  goto 102


state 63
	Cond : '(' Cond OU . Cond ')'  (60)

	NUM  shift 17
	'('  shift 18
	'!'  shift 19
	.  error

	Cond  goto 103


state 64
	Cond : '(' Expr EQ . Expr ')'  (53)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 104
	Sexpr  goto 39


state 65
	Cond : '(' Expr NEQ . Expr ')'  (54)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 105
	Sexpr  goto 39


state 66
	Cond : '(' Expr LEQ . Expr ')'  (57)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 106
	Sexpr  goto 39


state 67
	Cond : '(' Expr GEQ . Expr ')'  (58)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 107
	Sexpr  goto 39


state 68
	Cond : '(' Expr '<' . Expr ')'  (55)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 108
	Sexpr  goto 39


state 69
	Cond : '(' Expr '>' . Expr ')'  (56)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 109
	Sexpr  goto 39


state 70
	ProgG : ProgG VAR '=' Expr ';' .  (4)

	.  reduce 4


state 71
	ProgG : ProgG VAR '[' NUM ']' . '=' Expr ';'  (5)

	'='  shift 110
	.  error


state 72
	Lexpr : '(' Eexpr ')' .  (39)

	.  reduce 39


state 73
	Eexpr : Eexpr ',' . Expr  (41)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 111
	Sexpr  goto 39


state 74
	Atrib : TIPO VAR '[' NUM . ']'  (34)

	']'  shift 112
	.  error


state 75
	Prog : Prog VAR . '=' Expr ';'  (24)
	Prog : Prog VAR . '[' NUM ']' '=' Expr ';'  (25)
	Funcao : VAR . Lexpr  (30)

	'='  shift 113
	'['  shift 114
	'('  shift 23
	.  error

	Lexpr  goto 24


state 76
	Atrib : TIPO . VAR  (33)
	Atrib : TIPO . VAR '[' NUM ']'  (34)
	Igual : TIPO . VAR '='  (36)

	VAR  shift 115
	.  error


state 77
	Prog : Prog COM .  (28)

	.  reduce 28


state 78
	Prog : Prog ';' .  (27)

	.  reduce 27


state 79
	Se : Se '{' Prog '}' . SENAO  (47)
	Se : Se '{' Prog '}' .  (48)

	SENAO  shift 116
	$end  reduce 48
	SE  reduce 48
	ENQ  reduce 48
	VAR  reduce 48
	TIPO  reduce 48
	COM  reduce 48
	RETURN  reduce 48
	';'  reduce 48
	'{'  reduce 48
	'}'  reduce 48
	')'  reduce 48


state 80
	Prog : Prog Atrib . ';'  (23)

	';'  shift 117
	.  error


state 81
	Prog : Prog Se .  (21)
	Se : Se . '{' Prog '}' SENAO  (47)
	Se : Se . '{' Prog '}'  (48)

	'{'  shift 27
	SE  reduce 21
	ENQ  reduce 21
	VAR  reduce 21
	TIPO  reduce 21
	COM  reduce 21
	';'  reduce 21
	'}'  reduce 21


state 82
	Prog : Prog Funcao . ';'  (26)

	';'  shift 118
	.  error


state 83
	Prog : Prog Enq .  (22)
	Enq : Enq . Cond  (50)
	Enq : Enq . '{' Prog '}'  (51)

	NUM  shift 17
	'('  shift 18
	'{'  shift 30
	'!'  shift 19
	SE  reduce 22
	ENQ  reduce 22
	VAR  reduce 22
	TIPO  reduce 22
	COM  reduce 22
	';'  reduce 22
	'}'  reduce 22

	Cond  goto 31


state 84
	ProgF : ProgF VAR . '=' Expr ';'  (14)
	ProgF : ProgF VAR . '[' NUM ']' '=' Expr ';'  (15)
	Funcao : VAR . Lexpr  (30)

	'='  shift 119
	'['  shift 120
	'('  shift 23
	.  error

	Lexpr  goto 24


state 85
	ProgF : ProgF COM .  (18)

	.  reduce 18


state 86
	ProgF : ProgF RETURN . Expr ';'  (19)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 121
	Sexpr  goto 39


state 87
	ProgF : ProgF ';' .  (17)

	.  reduce 17


state 88
	CriaFun : Ltipo '{' ProgF '}' .  (32)

	.  reduce 32


state 89
	ProgF : ProgF Atrib . ';'  (13)

	';'  shift 122
	.  error


state 90
	ProgF : ProgF Se .  (11)
	Se : Se . '{' Prog '}' SENAO  (47)
	Se : Se . '{' Prog '}'  (48)

	'{'  shift 27
	SE  reduce 11
	ENQ  reduce 11
	VAR  reduce 11
	TIPO  reduce 11
	COM  reduce 11
	RETURN  reduce 11
	';'  reduce 11
	'}'  reduce 11


state 91
	ProgF : ProgF Funcao . ';'  (16)

	';'  shift 123
	.  error


state 92
	ProgF : ProgF Enq .  (12)
	Enq : Enq . Cond  (50)
	Enq : Enq . '{' Prog '}'  (51)

	NUM  shift 17
	'('  shift 18
	'{'  shift 30
	'!'  shift 19
	SE  reduce 12
	ENQ  reduce 12
	VAR  reduce 12
	TIPO  reduce 12
	COM  reduce 12
	RETURN  reduce 12
	';'  reduce 12
	'}'  reduce 12

	Cond  goto 31


state 93
	Enq : Enq '{' Prog '}' .  (51)

	.  reduce 51


state 94
	Sexpr : VAR '[' Expr . ']'  (65)

	']'  shift 124
	.  error


state 95
	Expr : '(' Expr ')' .  (73)

	.  reduce 73


state 96
	Expr : '(' Expr '+' . Expr ')'  (68)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 125
	Sexpr  goto 39


state 97
	Expr : '(' Expr '-' . Expr ')'  (69)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 126
	Sexpr  goto 39


state 98
	Expr : '(' Expr '*' . Expr ')'  (70)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 127
	Sexpr  goto 39


state 99
	Expr : '(' Expr '/' . Expr ')'  (71)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 128
	Sexpr  goto 39


state 100
	Expr : '(' Expr '%' . Expr ')'  (72)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 129
	Sexpr  goto 39


state 101
	Etipo : Etipo ',' TIPO VAR .  (45)

	.  reduce 45


state 102
	Cond : '(' Cond E Cond . ')'  (59)

	')'  shift 130
	.  error


state 103
	Cond : '(' Cond OU Cond . ')'  (60)

	')'  shift 131
	.  error


state 104
	Cond : '(' Expr EQ Expr . ')'  (53)

	')'  shift 132
	.  error


state 105
	Cond : '(' Expr NEQ Expr . ')'  (54)

	')'  shift 133
	.  error


state 106
	Cond : '(' Expr LEQ Expr . ')'  (57)

	')'  shift 134
	.  error


state 107
	Cond : '(' Expr GEQ Expr . ')'  (58)

	')'  shift 135
	.  error


state 108
	Cond : '(' Expr '<' Expr . ')'  (55)

	')'  shift 136
	.  error


state 109
	Cond : '(' Expr '>' Expr . ')'  (56)

	')'  shift 137
	.  error


state 110
	ProgG : ProgG VAR '[' NUM ']' '=' . Expr ';'  (5)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 138
	Sexpr  goto 39


state 111
	Eexpr : Eexpr ',' Expr .  (41)

	.  reduce 41


state 112
	Atrib : TIPO VAR '[' NUM ']' .  (34)

	.  reduce 34


state 113
	Prog : Prog VAR '=' . Expr ';'  (24)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 139
	Sexpr  goto 39


state 114
	Prog : Prog VAR '[' . NUM ']' '=' Expr ';'  (25)

	NUM  shift 140
	.  error


state 115
	Atrib : TIPO VAR .  (33)
	Atrib : TIPO VAR . '[' NUM ']'  (34)
	Igual : TIPO VAR . '='  (36)

	'='  shift 52
	'['  shift 53
	';'  reduce 33


state 116
	Se : Se '{' Prog '}' SENAO .  (47)

	.  reduce 47


state 117
	Prog : Prog Atrib ';' .  (23)

	.  reduce 23


state 118
	Prog : Prog Funcao ';' .  (26)

	.  reduce 26


state 119
	ProgF : ProgF VAR '=' . Expr ';'  (14)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 141
	Sexpr  goto 39


state 120
	ProgF : ProgF VAR '[' . NUM ']' '=' Expr ';'  (15)

	NUM  shift 142
	.  error


state 121
	ProgF : ProgF RETURN Expr . ';'  (19)

	';'  shift 143
	.  error


state 122
	ProgF : ProgF Atrib ';' .  (13)

	.  reduce 13


state 123
	ProgF : ProgF Funcao ';' .  (16)

	.  reduce 16


state 124
	Sexpr : VAR '[' Expr ']' .  (65)

	.  reduce 65


state 125
	Expr : '(' Expr '+' Expr . ')'  (68)

	')'  shift 144
	.  error


state 126
	Expr : '(' Expr '-' Expr . ')'  (69)

	')'  shift 145
	.  error


state 127
	Expr : '(' Expr '*' Expr . ')'  (70)

	')'  shift 146
	.  error


state 128
	Expr : '(' Expr '/' Expr . ')'  (71)

	')'  shift 147
	.  error


state 129
	Expr : '(' Expr '%' Expr . ')'  (72)

	')'  shift 148
	.  error


state 130
	Cond : '(' Cond E Cond ')' .  (59)

	.  reduce 59


state 131
	Cond : '(' Cond OU Cond ')' .  (60)

	.  reduce 60


state 132
	Cond : '(' Expr EQ Expr ')' .  (53)

	.  reduce 53


state 133
	Cond : '(' Expr NEQ Expr ')' .  (54)

	.  reduce 54


state 134
	Cond : '(' Expr LEQ Expr ')' .  (57)

	.  reduce 57


state 135
	Cond : '(' Expr GEQ Expr ')' .  (58)

	.  reduce 58


state 136
	Cond : '(' Expr '<' Expr ')' .  (55)

	.  reduce 55


state 137
	Cond : '(' Expr '>' Expr ')' .  (56)

	.  reduce 56


state 138
	ProgG : ProgG VAR '[' NUM ']' '=' Expr . ';'  (5)

	';'  shift 149
	.  error


state 139
	Prog : Prog VAR '=' Expr . ';'  (24)

	';'  shift 150
	.  error


state 140
	Prog : Prog VAR '[' NUM . ']' '=' Expr ';'  (25)

	']'  shift 151
	.  error


state 141
	ProgF : ProgF VAR '=' Expr . ';'  (14)

	';'  shift 152
	.  error


state 142
	ProgF : ProgF VAR '[' NUM . ']' '=' Expr ';'  (15)

	']'  shift 153
	.  error


state 143
	ProgF : ProgF RETURN Expr ';' .  (19)

	.  reduce 19


state 144
	Expr : '(' Expr '+' Expr ')' .  (68)

	.  reduce 68


state 145
	Expr : '(' Expr '-' Expr ')' .  (69)

	.  reduce 69


state 146
	Expr : '(' Expr '*' Expr ')' .  (70)

	.  reduce 70


state 147
	Expr : '(' Expr '/' Expr ')' .  (71)

	.  reduce 71


state 148
	Expr : '(' Expr '%' Expr ')' .  (72)

	.  reduce 72


state 149
	ProgG : ProgG VAR '[' NUM ']' '=' Expr ';' .  (5)

	.  reduce 5


state 150
	Prog : Prog VAR '=' Expr ';' .  (24)

	.  reduce 24


state 151
	Prog : Prog VAR '[' NUM ']' . '=' Expr ';'  (25)

	'='  shift 154
	.  error


state 152
	ProgF : ProgF VAR '=' Expr ';' .  (14)

	.  reduce 14


state 153
	ProgF : ProgF VAR '[' NUM ']' . '=' Expr ';'  (15)

	'='  shift 155
	.  error


state 154
	Prog : Prog VAR '[' NUM ']' '=' . Expr ';'  (25)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 156
	Sexpr  goto 39


state 155
	ProgF : ProgF VAR '[' NUM ']' '=' . Expr ';'  (15)

	VAR  shift 32
	NUM  shift 33
	FLOAT  shift 34
	STR  shift 35
	'('  shift 36
	.  error

	Funcao  goto 37
	Expr  goto 157
	Sexpr  goto 39


state 156
	Prog : Prog VAR '[' NUM ']' '=' Expr . ';'  (25)

	';'  shift 158
	.  error


state 157
	ProgF : ProgF VAR '[' NUM ']' '=' Expr . ';'  (15)

	';'  shift 159
	.  error


state 158
	Prog : Prog VAR '[' NUM ']' '=' Expr ';' .  (25)

	.  reduce 25


state 159
	ProgF : ProgF VAR '[' NUM ']' '=' Expr ';' .  (15)

	.  reduce 15


State 32 contains 1 shift/reduce conflict.


36 terminals, 17 nonterminals
75 grammar rules, 160 states
