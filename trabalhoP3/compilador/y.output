Terminals unused in grammar

   CASO


State 29 conflicts: 1 shift/reduce


Grammar

    0 $accept: ProgG $end

    1 ProgG: ProgG Se
    2      | ProgG Enq
    3      | ProgG Atrib ';'
    4      | ProgG VAR '=' Expr ';'
    5      | ProgG VAR '[' Expr ']' '=' Expr ';'
    6      | ProgG CriaFun
    7      | ProgG Funcao ';'
    8      | ProgG ';'
    9      | ProgG COM
   10      | %empty

   11 ProgF: ProgF Se
   12      | ProgF Enq
   13      | ProgF Atrib ';'
   14      | ProgF VAR '=' Expr ';'
   15      | ProgF VAR '[' Expr ']' '=' Expr ';'
   16      | ProgF Funcao ';'
   17      | ProgF ';'
   18      | ProgF COM
   19      | ProgF RETURN Expr ';'
   20      | %empty

   21 Prog: Prog Se
   22     | Prog Enq
   23     | Prog Atrib ';'
   24     | Prog VAR '=' Expr ';'
   25     | Prog VAR '[' Expr ']' '=' Expr ';'
   26     | Prog Funcao ';'
   27     | Prog ';'
   28     | Prog COM
   29     | %empty

   30 Funcao: VAR Lexpr

   31 CriaFun: TIPO VAR '('
   32        | Ltipo '{' ProgF '}'

   33 Atrib: TIPO VAR
   34      | TIPO VAR '[' Expr ']'
   35      | Igual

   36 Igual: TIPO VAR '='
   37      | TIPO VAR '[' Expr ']' '='
   38      | Igual Expr

   39 Lexpr: '(' ')'
   40      | '(' Eexpr ')'

   41 Eexpr: Expr
   42      | Eexpr ',' Expr

   43 Ltipo: ')'
   44      | Etipo ')'

   45 Etipo: TIPO VAR
   46      | Etipo ',' TIPO VAR

   47 Se: SE Cond
   48   | Se '{' Prog '}' SENAO
   49   | Se '{' Prog '}'

   50 Enq: ENQ
   51    | Enq Cond
   52    | Enq '{' Prog '}'

   53 Cond: NUM
   54     | '(' Expr EQ Expr ')'
   55     | '(' Expr NEQ Expr ')'
   56     | '(' Expr '<' Expr ')'
   57     | '(' Expr '>' Expr ')'
   58     | '(' Expr LEQ Expr ')'
   59     | '(' Expr GEQ Expr ')'
   60     | '(' Cond E Cond ')'
   61     | '(' Cond OU Cond ')'
   62     | '!' Cond

   63 Sexpr: VAR
   64      | NUM
   65      | FLOAT
   66      | VAR '[' Expr ']'
   67      | Funcao
   68      | STR

   69 Expr: '(' Expr '+' Expr ')'
   70     | '(' Expr '-' Expr ')'
   71     | '(' Expr '*' Expr ')'
   72     | '(' Expr '/' Expr ')'
   73     | '(' Expr '%' Expr ')'
   74     | COS Expr
   75     | SIN Expr
   76     | '(' Expr ')'
   77     | Sexpr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 62
'%' (37) 73
'(' (40) 31 39 40 54 55 56 57 58 59 60 61 69 70 71 72 73 76
')' (41) 39 40 43 44 54 55 56 57 58 59 60 61 69 70 71 72 73 76
'*' (42) 71
'+' (43) 69
',' (44) 42 46
'-' (45) 70
'/' (47) 72
';' (59) 3 4 5 7 8 13 14 15 16 17 19 23 24 25 26 27
'<' (60) 56
'=' (61) 4 5 14 15 24 25 36 37
'>' (62) 57
'[' (91) 5 15 25 34 37 66
']' (93) 5 15 25 34 37 66
'{' (123) 32 48 49 52
'}' (125) 32 48 49 52
error (256)
SE (258) 47
SENAO (259) 48
CASO (260)
ENQ (261) 50
VAR (262) 4 5 14 15 24 25 30 31 33 34 36 37 45 46 63 66
TIPO (263) 31 33 34 36 37 45 46
NUM (264) 53 64
FLOAT (265) 65
EQ (266) 54
NEQ (267) 55
LEQ (268) 58
GEQ (269) 59
E (270) 60
OU (271) 61
STR (272) 68
COM (273) 9 18 28
RETURN (274) 19
COS (275) 74
SIN (276) 75


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
ProgG (40)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0 1 2 3 4 5 6 7 8 9
ProgF (41)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 11 12 13 14 15
    16 17 18 19 32
Prog (42)
    on left: 21 22 23 24 25 26 27 28 29, on right: 21 22 23 24 25 26
    27 28 48 49 52
Funcao (43)
    on left: 30, on right: 7 16 26 67
CriaFun (44)
    on left: 31 32, on right: 6
Atrib (45)
    on left: 33 34 35, on right: 3 13 23
Igual (46)
    on left: 36 37 38, on right: 35 38
Lexpr (47)
    on left: 39 40, on right: 30
Eexpr (48)
    on left: 41 42, on right: 40 42
Ltipo (49)
    on left: 43 44, on right: 32
Etipo (50)
    on left: 45 46, on right: 44 46
Se (51)
    on left: 47 48 49, on right: 1 11 21 48 49
Enq (52)
    on left: 50 51 52, on right: 2 12 22 51 52
Cond (53)
    on left: 53 54 55 56 57 58 59 60 61 62, on right: 47 51 60 61 62
Sexpr (54)
    on left: 63 64 65 66 67 68, on right: 77
Expr (55)
    on left: 69 70 71 72 73 74 75 76 77, on right: 4 5 14 15 19 24
    25 34 37 38 41 42 54 55 56 57 58 59 66 69 70 71 72 73 74 75 76


State 0

    0 $accept: . ProgG $end

    $default  reduce using rule 10 (ProgG)

    ProgG  go to state 1


State 1

    0 $accept: ProgG . $end
    1 ProgG: ProgG . Se
    2      | ProgG . Enq
    3      | ProgG . Atrib ';'
    4      | ProgG . VAR '=' Expr ';'
    5      | ProgG . VAR '[' Expr ']' '=' Expr ';'
    6      | ProgG . CriaFun
    7      | ProgG . Funcao ';'
    8      | ProgG . ';'
    9      | ProgG . COM

    $end  shift, and go to state 2
    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 5
    TIPO  shift, and go to state 6
    COM   shift, and go to state 7
    ';'   shift, and go to state 8
    ')'   shift, and go to state 9

    Funcao   go to state 10
    CriaFun  go to state 11
    Atrib    go to state 12
    Igual    go to state 13
    Ltipo    go to state 14
    Etipo    go to state 15
    Se       go to state 16
    Enq      go to state 17


State 2

    0 $accept: ProgG $end .

    $default  accept


State 3

   47 Se: SE . Cond

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 21


State 4

   50 Enq: ENQ .

    $default  reduce using rule 50 (Enq)


State 5

    4 ProgG: ProgG VAR . '=' Expr ';'
    5      | ProgG VAR . '[' Expr ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 22
    '['  shift, and go to state 23
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 6

   31 CriaFun: TIPO . VAR '('
   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' Expr ']'
   36 Igual: TIPO . VAR '='
   37      | TIPO . VAR '[' Expr ']' '='
   45 Etipo: TIPO . VAR

    VAR  shift, and go to state 26


State 7

    9 ProgG: ProgG COM .

    $default  reduce using rule 9 (ProgG)


State 8

    8 ProgG: ProgG ';' .

    $default  reduce using rule 8 (ProgG)


State 9

   43 Ltipo: ')' .

    $default  reduce using rule 43 (Ltipo)


State 10

    7 ProgG: ProgG Funcao . ';'

    ';'  shift, and go to state 27


State 11

    6 ProgG: ProgG CriaFun .

    $default  reduce using rule 6 (ProgG)


State 12

    3 ProgG: ProgG Atrib . ';'

    ';'  shift, and go to state 28


State 13

   35 Atrib: Igual .
   38 Igual: Igual . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    $default  reduce using rule 35 (Atrib)

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 38


State 14

   32 CriaFun: Ltipo . '{' ProgF '}'

    '{'  shift, and go to state 39


State 15

   44 Ltipo: Etipo . ')'
   46 Etipo: Etipo . ',' TIPO VAR

    ')'  shift, and go to state 40
    ','  shift, and go to state 41


State 16

    1 ProgG: ProgG Se .
   48 Se: Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 42

    $default  reduce using rule 1 (ProgG)


State 17

    2 ProgG: ProgG Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 43
    '!'  shift, and go to state 20

    $default  reduce using rule 2 (ProgG)

    Cond  go to state 44


State 18

   53 Cond: NUM .

    $default  reduce using rule 53 (Cond)


State 19

   54 Cond: '(' . Expr EQ Expr ')'
   55     | '(' . Expr NEQ Expr ')'
   56     | '(' . Expr '<' Expr ')'
   57     | '(' . Expr '>' Expr ')'
   58     | '(' . Expr LEQ Expr ')'
   59     | '(' . Expr GEQ Expr ')'
   60     | '(' . Cond E Cond ')'
   61     | '(' . Cond OU Cond ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 45
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 46
    '!'    shift, and go to state 20

    Funcao  go to state 36
    Cond    go to state 47
    Sexpr   go to state 37
    Expr    go to state 48


State 20

   62 Cond: '!' . Cond

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 49


State 21

   47 Se: SE Cond .

    $default  reduce using rule 47 (Se)


State 22

    4 ProgG: ProgG VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 50


State 23

    5 ProgG: ProgG VAR '[' . Expr ']' '=' Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 51


State 24

   39 Lexpr: '(' . ')'
   40      | '(' . Eexpr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35
    ')'    shift, and go to state 52

    Funcao  go to state 36
    Eexpr   go to state 53
    Sexpr   go to state 37
    Expr    go to state 54


State 25

   30 Funcao: VAR Lexpr .

    $default  reduce using rule 30 (Funcao)


State 26

   31 CriaFun: TIPO VAR . '('
   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' Expr ']'
   36 Igual: TIPO VAR . '='
   37      | TIPO VAR . '[' Expr ']' '='
   45 Etipo: TIPO VAR .

    '='  shift, and go to state 55
    '['  shift, and go to state 56
    '('  shift, and go to state 57

    ';'       reduce using rule 33 (Atrib)
    $default  reduce using rule 45 (Etipo)


State 27

    7 ProgG: ProgG Funcao ';' .

    $default  reduce using rule 7 (ProgG)


State 28

    3 ProgG: ProgG Atrib ';' .

    $default  reduce using rule 3 (ProgG)


State 29

   30 Funcao: VAR . Lexpr
   63 Sexpr: VAR .
   66      | VAR . '[' Expr ']'

    '['  shift, and go to state 58
    '('  shift, and go to state 24

    '('       [reduce using rule 63 (Sexpr)]
    $default  reduce using rule 63 (Sexpr)

    Lexpr  go to state 25


State 30

   64 Sexpr: NUM .

    $default  reduce using rule 64 (Sexpr)


State 31

   65 Sexpr: FLOAT .

    $default  reduce using rule 65 (Sexpr)


State 32

   68 Sexpr: STR .

    $default  reduce using rule 68 (Sexpr)


State 33

   74 Expr: COS . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 59


State 34

   75 Expr: SIN . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 60


State 35

   69 Expr: '(' . Expr '+' Expr ')'
   70     | '(' . Expr '-' Expr ')'
   71     | '(' . Expr '*' Expr ')'
   72     | '(' . Expr '/' Expr ')'
   73     | '(' . Expr '%' Expr ')'
   76     | '(' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 61


State 36

   67 Sexpr: Funcao .

    $default  reduce using rule 67 (Sexpr)


State 37

   77 Expr: Sexpr .

    $default  reduce using rule 77 (Expr)


State 38

   38 Igual: Igual Expr .

    $default  reduce using rule 38 (Igual)


State 39

   32 CriaFun: Ltipo '{' . ProgF '}'

    $default  reduce using rule 20 (ProgF)

    ProgF  go to state 62


State 40

   44 Ltipo: Etipo ')' .

    $default  reduce using rule 44 (Ltipo)


State 41

   46 Etipo: Etipo ',' . TIPO VAR

    TIPO  shift, and go to state 63


State 42

   48 Se: Se '{' . Prog '}' SENAO
   49   | Se '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 64


State 43

   52 Enq: Enq '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 65


State 44

   51 Enq: Enq Cond .

    $default  reduce using rule 51 (Enq)


State 45

   53 Cond: NUM .
   64 Sexpr: NUM .

    E         reduce using rule 53 (Cond)
    OU        reduce using rule 53 (Cond)
    $default  reduce using rule 64 (Sexpr)


State 46

   54 Cond: '(' . Expr EQ Expr ')'
   55     | '(' . Expr NEQ Expr ')'
   56     | '(' . Expr '<' Expr ')'
   57     | '(' . Expr '>' Expr ')'
   58     | '(' . Expr LEQ Expr ')'
   59     | '(' . Expr GEQ Expr ')'
   60     | '(' . Cond E Cond ')'
   61     | '(' . Cond OU Cond ')'
   69 Expr: '(' . Expr '+' Expr ')'
   70     | '(' . Expr '-' Expr ')'
   71     | '(' . Expr '*' Expr ')'
   72     | '(' . Expr '/' Expr ')'
   73     | '(' . Expr '%' Expr ')'
   76     | '(' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 45
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 46
    '!'    shift, and go to state 20

    Funcao  go to state 36
    Cond    go to state 47
    Sexpr   go to state 37
    Expr    go to state 66


State 47

   60 Cond: '(' Cond . E Cond ')'
   61     | '(' Cond . OU Cond ')'

    E   shift, and go to state 67
    OU  shift, and go to state 68


State 48

   54 Cond: '(' Expr . EQ Expr ')'
   55     | '(' Expr . NEQ Expr ')'
   56     | '(' Expr . '<' Expr ')'
   57     | '(' Expr . '>' Expr ')'
   58     | '(' Expr . LEQ Expr ')'
   59     | '(' Expr . GEQ Expr ')'

    EQ   shift, and go to state 69
    NEQ  shift, and go to state 70
    LEQ  shift, and go to state 71
    GEQ  shift, and go to state 72
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74


State 49

   62 Cond: '!' Cond .

    $default  reduce using rule 62 (Cond)


State 50

    4 ProgG: ProgG VAR '=' Expr . ';'

    ';'  shift, and go to state 75


State 51

    5 ProgG: ProgG VAR '[' Expr . ']' '=' Expr ';'

    ']'  shift, and go to state 76


State 52

   39 Lexpr: '(' ')' .

    $default  reduce using rule 39 (Lexpr)


State 53

   40 Lexpr: '(' Eexpr . ')'
   42 Eexpr: Eexpr . ',' Expr

    ')'  shift, and go to state 77
    ','  shift, and go to state 78


State 54

   41 Eexpr: Expr .

    $default  reduce using rule 41 (Eexpr)


State 55

   36 Igual: TIPO VAR '=' .

    $default  reduce using rule 36 (Igual)


State 56

   34 Atrib: TIPO VAR '[' . Expr ']'
   37 Igual: TIPO VAR '[' . Expr ']' '='

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 79


State 57

   31 CriaFun: TIPO VAR '(' .

    $default  reduce using rule 31 (CriaFun)


State 58

   66 Sexpr: VAR '[' . Expr ']'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 80


State 59

   74 Expr: COS Expr .

    $default  reduce using rule 74 (Expr)


State 60

   75 Expr: SIN Expr .

    $default  reduce using rule 75 (Expr)


State 61

   69 Expr: '(' Expr . '+' Expr ')'
   70     | '(' Expr . '-' Expr ')'
   71     | '(' Expr . '*' Expr ')'
   72     | '(' Expr . '/' Expr ')'
   73     | '(' Expr . '%' Expr ')'
   76     | '(' Expr . ')'

    ')'  shift, and go to state 81
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86


State 62

   11 ProgF: ProgF . Se
   12      | ProgF . Enq
   13      | ProgF . Atrib ';'
   14      | ProgF . VAR '=' Expr ';'
   15      | ProgF . VAR '[' Expr ']' '=' Expr ';'
   16      | ProgF . Funcao ';'
   17      | ProgF . ';'
   18      | ProgF . COM
   19      | ProgF . RETURN Expr ';'
   32 CriaFun: Ltipo '{' ProgF . '}'

    SE      shift, and go to state 3
    ENQ     shift, and go to state 4
    VAR     shift, and go to state 87
    TIPO    shift, and go to state 88
    COM     shift, and go to state 89
    RETURN  shift, and go to state 90
    ';'     shift, and go to state 91
    '}'     shift, and go to state 92

    Funcao  go to state 93
    Atrib   go to state 94
    Igual   go to state 13
    Se      go to state 95
    Enq     go to state 96


State 63

   46 Etipo: Etipo ',' TIPO . VAR

    VAR  shift, and go to state 97


State 64

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . VAR '[' Expr ']' '=' Expr ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   48 Se: Se '{' Prog . '}' SENAO
   49   | Se '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 98
    TIPO  shift, and go to state 88
    COM   shift, and go to state 99
    ';'   shift, and go to state 100
    '}'   shift, and go to state 101

    Funcao  go to state 102
    Atrib   go to state 103
    Igual   go to state 13
    Se      go to state 104
    Enq     go to state 105


State 65

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . VAR '[' Expr ']' '=' Expr ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   52 Enq: Enq '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 98
    TIPO  shift, and go to state 88
    COM   shift, and go to state 99
    ';'   shift, and go to state 100
    '}'   shift, and go to state 106

    Funcao  go to state 102
    Atrib   go to state 103
    Igual   go to state 13
    Se      go to state 104
    Enq     go to state 105


State 66

   54 Cond: '(' Expr . EQ Expr ')'
   55     | '(' Expr . NEQ Expr ')'
   56     | '(' Expr . '<' Expr ')'
   57     | '(' Expr . '>' Expr ')'
   58     | '(' Expr . LEQ Expr ')'
   59     | '(' Expr . GEQ Expr ')'
   69 Expr: '(' Expr . '+' Expr ')'
   70     | '(' Expr . '-' Expr ')'
   71     | '(' Expr . '*' Expr ')'
   72     | '(' Expr . '/' Expr ')'
   73     | '(' Expr . '%' Expr ')'
   76     | '(' Expr . ')'

    EQ   shift, and go to state 69
    NEQ  shift, and go to state 70
    LEQ  shift, and go to state 71
    GEQ  shift, and go to state 72
    ')'  shift, and go to state 81
    '<'  shift, and go to state 73
    '>'  shift, and go to state 74
    '+'  shift, and go to state 82
    '-'  shift, and go to state 83
    '*'  shift, and go to state 84
    '/'  shift, and go to state 85
    '%'  shift, and go to state 86


State 67

   60 Cond: '(' Cond E . Cond ')'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 107


State 68

   61 Cond: '(' Cond OU . Cond ')'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 108


State 69

   54 Cond: '(' Expr EQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 109


State 70

   55 Cond: '(' Expr NEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 110


State 71

   58 Cond: '(' Expr LEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 111


State 72

   59 Cond: '(' Expr GEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 112


State 73

   56 Cond: '(' Expr '<' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 113


State 74

   57 Cond: '(' Expr '>' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 114


State 75

    4 ProgG: ProgG VAR '=' Expr ';' .

    $default  reduce using rule 4 (ProgG)


State 76

    5 ProgG: ProgG VAR '[' Expr ']' . '=' Expr ';'

    '='  shift, and go to state 115


State 77

   40 Lexpr: '(' Eexpr ')' .

    $default  reduce using rule 40 (Lexpr)


State 78

   42 Eexpr: Eexpr ',' . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 116


State 79

   34 Atrib: TIPO VAR '[' Expr . ']'
   37 Igual: TIPO VAR '[' Expr . ']' '='

    ']'  shift, and go to state 117


State 80

   66 Sexpr: VAR '[' Expr . ']'

    ']'  shift, and go to state 118


State 81

   76 Expr: '(' Expr ')' .

    $default  reduce using rule 76 (Expr)


State 82

   69 Expr: '(' Expr '+' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 119


State 83

   70 Expr: '(' Expr '-' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 120


State 84

   71 Expr: '(' Expr '*' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 121


State 85

   72 Expr: '(' Expr '/' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 122


State 86

   73 Expr: '(' Expr '%' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 123


State 87

   14 ProgF: ProgF VAR . '=' Expr ';'
   15      | ProgF VAR . '[' Expr ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 124
    '['  shift, and go to state 125
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 88

   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' Expr ']'
   36 Igual: TIPO . VAR '='
   37      | TIPO . VAR '[' Expr ']' '='

    VAR  shift, and go to state 126


State 89

   18 ProgF: ProgF COM .

    $default  reduce using rule 18 (ProgF)


State 90

   19 ProgF: ProgF RETURN . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 127


State 91

   17 ProgF: ProgF ';' .

    $default  reduce using rule 17 (ProgF)


State 92

   32 CriaFun: Ltipo '{' ProgF '}' .

    $default  reduce using rule 32 (CriaFun)


State 93

   16 ProgF: ProgF Funcao . ';'

    ';'  shift, and go to state 128


State 94

   13 ProgF: ProgF Atrib . ';'

    ';'  shift, and go to state 129


State 95

   11 ProgF: ProgF Se .
   48 Se: Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 42

    $default  reduce using rule 11 (ProgF)


State 96

   12 ProgF: ProgF Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 43
    '!'  shift, and go to state 20

    $default  reduce using rule 12 (ProgF)

    Cond  go to state 44


State 97

   46 Etipo: Etipo ',' TIPO VAR .

    $default  reduce using rule 46 (Etipo)


State 98

   24 Prog: Prog VAR . '=' Expr ';'
   25     | Prog VAR . '[' Expr ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 130
    '['  shift, and go to state 131
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 99

   28 Prog: Prog COM .

    $default  reduce using rule 28 (Prog)


State 100

   27 Prog: Prog ';' .

    $default  reduce using rule 27 (Prog)


State 101

   48 Se: Se '{' Prog '}' . SENAO
   49   | Se '{' Prog '}' .

    SENAO  shift, and go to state 132

    $default  reduce using rule 49 (Se)


State 102

   26 Prog: Prog Funcao . ';'

    ';'  shift, and go to state 133


State 103

   23 Prog: Prog Atrib . ';'

    ';'  shift, and go to state 134


State 104

   21 Prog: Prog Se .
   48 Se: Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 42

    $default  reduce using rule 21 (Prog)


State 105

   22 Prog: Prog Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 43
    '!'  shift, and go to state 20

    $default  reduce using rule 22 (Prog)

    Cond  go to state 44


State 106

   52 Enq: Enq '{' Prog '}' .

    $default  reduce using rule 52 (Enq)


State 107

   60 Cond: '(' Cond E Cond . ')'

    ')'  shift, and go to state 135


State 108

   61 Cond: '(' Cond OU Cond . ')'

    ')'  shift, and go to state 136


State 109

   54 Cond: '(' Expr EQ Expr . ')'

    ')'  shift, and go to state 137


State 110

   55 Cond: '(' Expr NEQ Expr . ')'

    ')'  shift, and go to state 138


State 111

   58 Cond: '(' Expr LEQ Expr . ')'

    ')'  shift, and go to state 139


State 112

   59 Cond: '(' Expr GEQ Expr . ')'

    ')'  shift, and go to state 140


State 113

   56 Cond: '(' Expr '<' Expr . ')'

    ')'  shift, and go to state 141


State 114

   57 Cond: '(' Expr '>' Expr . ')'

    ')'  shift, and go to state 142


State 115

    5 ProgG: ProgG VAR '[' Expr ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 143


State 116

   42 Eexpr: Eexpr ',' Expr .

    $default  reduce using rule 42 (Eexpr)


State 117

   34 Atrib: TIPO VAR '[' Expr ']' .
   37 Igual: TIPO VAR '[' Expr ']' . '='

    '='  shift, and go to state 144

    $default  reduce using rule 34 (Atrib)


State 118

   66 Sexpr: VAR '[' Expr ']' .

    $default  reduce using rule 66 (Sexpr)


State 119

   69 Expr: '(' Expr '+' Expr . ')'

    ')'  shift, and go to state 145


State 120

   70 Expr: '(' Expr '-' Expr . ')'

    ')'  shift, and go to state 146


State 121

   71 Expr: '(' Expr '*' Expr . ')'

    ')'  shift, and go to state 147


State 122

   72 Expr: '(' Expr '/' Expr . ')'

    ')'  shift, and go to state 148


State 123

   73 Expr: '(' Expr '%' Expr . ')'

    ')'  shift, and go to state 149


State 124

   14 ProgF: ProgF VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 150


State 125

   15 ProgF: ProgF VAR '[' . Expr ']' '=' Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 151


State 126

   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' Expr ']'
   36 Igual: TIPO VAR . '='
   37      | TIPO VAR . '[' Expr ']' '='

    '='  shift, and go to state 55
    '['  shift, and go to state 56

    $default  reduce using rule 33 (Atrib)


State 127

   19 ProgF: ProgF RETURN Expr . ';'

    ';'  shift, and go to state 152


State 128

   16 ProgF: ProgF Funcao ';' .

    $default  reduce using rule 16 (ProgF)


State 129

   13 ProgF: ProgF Atrib ';' .

    $default  reduce using rule 13 (ProgF)


State 130

   24 Prog: Prog VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 153


State 131

   25 Prog: Prog VAR '[' . Expr ']' '=' Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 154


State 132

   48 Se: Se '{' Prog '}' SENAO .

    $default  reduce using rule 48 (Se)


State 133

   26 Prog: Prog Funcao ';' .

    $default  reduce using rule 26 (Prog)


State 134

   23 Prog: Prog Atrib ';' .

    $default  reduce using rule 23 (Prog)


State 135

   60 Cond: '(' Cond E Cond ')' .

    $default  reduce using rule 60 (Cond)


State 136

   61 Cond: '(' Cond OU Cond ')' .

    $default  reduce using rule 61 (Cond)


State 137

   54 Cond: '(' Expr EQ Expr ')' .

    $default  reduce using rule 54 (Cond)


State 138

   55 Cond: '(' Expr NEQ Expr ')' .

    $default  reduce using rule 55 (Cond)


State 139

   58 Cond: '(' Expr LEQ Expr ')' .

    $default  reduce using rule 58 (Cond)


State 140

   59 Cond: '(' Expr GEQ Expr ')' .

    $default  reduce using rule 59 (Cond)


State 141

   56 Cond: '(' Expr '<' Expr ')' .

    $default  reduce using rule 56 (Cond)


State 142

   57 Cond: '(' Expr '>' Expr ')' .

    $default  reduce using rule 57 (Cond)


State 143

    5 ProgG: ProgG VAR '[' Expr ']' '=' Expr . ';'

    ';'  shift, and go to state 155


State 144

   37 Igual: TIPO VAR '[' Expr ']' '=' .

    $default  reduce using rule 37 (Igual)


State 145

   69 Expr: '(' Expr '+' Expr ')' .

    $default  reduce using rule 69 (Expr)


State 146

   70 Expr: '(' Expr '-' Expr ')' .

    $default  reduce using rule 70 (Expr)


State 147

   71 Expr: '(' Expr '*' Expr ')' .

    $default  reduce using rule 71 (Expr)


State 148

   72 Expr: '(' Expr '/' Expr ')' .

    $default  reduce using rule 72 (Expr)


State 149

   73 Expr: '(' Expr '%' Expr ')' .

    $default  reduce using rule 73 (Expr)


State 150

   14 ProgF: ProgF VAR '=' Expr . ';'

    ';'  shift, and go to state 156


State 151

   15 ProgF: ProgF VAR '[' Expr . ']' '=' Expr ';'

    ']'  shift, and go to state 157


State 152

   19 ProgF: ProgF RETURN Expr ';' .

    $default  reduce using rule 19 (ProgF)


State 153

   24 Prog: Prog VAR '=' Expr . ';'

    ';'  shift, and go to state 158


State 154

   25 Prog: Prog VAR '[' Expr . ']' '=' Expr ';'

    ']'  shift, and go to state 159


State 155

    5 ProgG: ProgG VAR '[' Expr ']' '=' Expr ';' .

    $default  reduce using rule 5 (ProgG)


State 156

   14 ProgF: ProgF VAR '=' Expr ';' .

    $default  reduce using rule 14 (ProgF)


State 157

   15 ProgF: ProgF VAR '[' Expr ']' . '=' Expr ';'

    '='  shift, and go to state 160


State 158

   24 Prog: Prog VAR '=' Expr ';' .

    $default  reduce using rule 24 (Prog)


State 159

   25 Prog: Prog VAR '[' Expr ']' . '=' Expr ';'

    '='  shift, and go to state 161


State 160

   15 ProgF: ProgF VAR '[' Expr ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 162


State 161

   25 Prog: Prog VAR '[' Expr ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    COS    shift, and go to state 33
    SIN    shift, and go to state 34
    '('    shift, and go to state 35

    Funcao  go to state 36
    Sexpr   go to state 37
    Expr    go to state 163


State 162

   15 ProgF: ProgF VAR '[' Expr ']' '=' Expr . ';'

    ';'  shift, and go to state 164


State 163

   25 Prog: Prog VAR '[' Expr ']' '=' Expr . ';'

    ';'  shift, and go to state 165


State 164

   15 ProgF: ProgF VAR '[' Expr ']' '=' Expr ';' .

    $default  reduce using rule 15 (ProgF)


State 165

   25 Prog: Prog VAR '[' Expr ']' '=' Expr ';' .

    $default  reduce using rule 25 (Prog)
