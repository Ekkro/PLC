   0  $accept : ProgG $end

   1  ProgG : ProgG SE Cond '{' ProgG '}' Se
   2        | ProgG ENQ Cond '{' ProgG '}'
   3        | ProgG TIPO Eatrib ';'
   4        | ProgG VAR '=' Expr ';'
   5        | ProgG VAR '[' Expr ']' '=' Expr ';'
   6        | ProgG TIPO VAR Ltipo '{' Prog '}'
   7        | ProgG VAR Lexpr ';'
   8        | ProgG ';'
   9        | ProgG COM
  10        |

  11  Prog : Prog SE Cond '{' Prog '}' Se
  12       | Prog ENQ Cond '{' Prog '}'
  13       | Prog TIPO Eatrib ';'
  14       | Prog VAR '=' Expr ';'
  15       | Prog VAR '[' Expr ']' '=' Expr ';'
  16       | Prog VAR Lexpr ';'
  17       | Prog ';'
  18       | Prog COM
  19       | Prog RETURN Expr ';'
  20       |

  21  Eatrib : VAR
  22         | VAR '[' Expr ']'
  23         | VAR '=' Expr
  24         | VAR '[' Expr ']' '=' Expr
  25         | Eatrib ',' VAR '=' Expr
  26         | Eatrib ',' VAR

  27  Lexpr : '(' ')'
  28        | '(' Eexpr ')'

  29  Eexpr : Expr
  30        | Eexpr ',' Expr

  31  Ltipo : '(' ')'
  32        | '(' Etipo ')'

  33  Etipo : TIPO VAR
  34        | Etipo ',' TIPO VAR

  35  Se :
  36     | CASO Cond '{' Prog '}' Se
  37     | SENAO '{' Prog '}'

  38  Cond : NUM
  39       | '(' Expr EQ Expr ')'
  40       | '(' Expr NEQ Expr ')'
  41       | '(' Expr '<' Expr ')'
  42       | '(' Expr '>' Expr ')'
  43       | '(' Expr LEQ Expr ')'
  44       | '(' Expr GEQ Expr ')'
  45       | '(' Cond E Cond ')'
  46       | '(' Cond OU Cond ')'
  47       | '!' Cond

  48  Sexpr : VAR
  49        | NUM
  50        | VAR '[' Expr ']'
  51        | VAR Lexpr
  52        | STR

  53  Expr : '(' Expr '+' Expr ')'
  54       | '(' Expr '-' Expr ')'
  55       | '(' Expr '*' Expr ')'
  56       | '(' Expr '/' Expr ')'
  57       | '(' Expr '%' Expr ')'
  58       | '(' Expr ')'
  59       | Sexpr

state 0
	$accept : . ProgG $end  (0)
	ProgG : .  (10)

	.  reduce 10

	ProgG  goto 1


state 1
	$accept : ProgG . $end  (0)
	ProgG : ProgG . SE Cond '{' ProgG '}' Se  (1)
	ProgG : ProgG . ENQ Cond '{' ProgG '}'  (2)
	ProgG : ProgG . TIPO Eatrib ';'  (3)
	ProgG : ProgG . VAR '=' Expr ';'  (4)
	ProgG : ProgG . VAR '[' Expr ']' '=' Expr ';'  (5)
	ProgG : ProgG . TIPO VAR Ltipo '{' Prog '}'  (6)
	ProgG : ProgG . VAR Lexpr ';'  (7)
	ProgG : ProgG . ';'  (8)
	ProgG : ProgG . COM  (9)

	$end  accept
	SE  shift 2
	ENQ  shift 3
	VAR  shift 4
	TIPO  shift 5
	COM  shift 6
	';'  shift 7
	.  error


state 2
	ProgG : ProgG SE . Cond '{' ProgG '}' Se  (1)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 11


state 3
	ProgG : ProgG ENQ . Cond '{' ProgG '}'  (2)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 12


state 4
	ProgG : ProgG VAR . '=' Expr ';'  (4)
	ProgG : ProgG VAR . '[' Expr ']' '=' Expr ';'  (5)
	ProgG : ProgG VAR . Lexpr ';'  (7)

	'='  shift 13
	'['  shift 14
	'('  shift 15
	.  error

	Lexpr  goto 16


state 5
	ProgG : ProgG TIPO . Eatrib ';'  (3)
	ProgG : ProgG TIPO . VAR Ltipo '{' Prog '}'  (6)

	VAR  shift 17
	.  error

	Eatrib  goto 18


state 6
	ProgG : ProgG COM .  (9)

	.  reduce 9


state 7
	ProgG : ProgG ';' .  (8)

	.  reduce 8


state 8
	Cond : NUM .  (38)

	.  reduce 38


state 9
	Cond : '(' . Expr EQ Expr ')'  (39)
	Cond : '(' . Expr NEQ Expr ')'  (40)
	Cond : '(' . Expr '<' Expr ')'  (41)
	Cond : '(' . Expr '>' Expr ')'  (42)
	Cond : '(' . Expr LEQ Expr ')'  (43)
	Cond : '(' . Expr GEQ Expr ')'  (44)
	Cond : '(' . Cond E Cond ')'  (45)
	Cond : '(' . Cond OU Cond ')'  (46)

	VAR  shift 19
	NUM  shift 20
	STR  shift 21
	'('  shift 22
	'!'  shift 10
	.  error

	Cond  goto 23
	Expr  goto 24
	Sexpr  goto 25


state 10
	Cond : '!' . Cond  (47)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 26


state 11
	ProgG : ProgG SE Cond . '{' ProgG '}' Se  (1)

	'{'  shift 27
	.  error


state 12
	ProgG : ProgG ENQ Cond . '{' ProgG '}'  (2)

	'{'  shift 28
	.  error


state 13
	ProgG : ProgG VAR '=' . Expr ';'  (4)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 31
	Sexpr  goto 25


state 14
	ProgG : ProgG VAR '[' . Expr ']' '=' Expr ';'  (5)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 32
	Sexpr  goto 25


state 15
	Lexpr : '(' . ')'  (27)
	Lexpr : '(' . Eexpr ')'  (28)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	')'  shift 33
	.  error

	Eexpr  goto 34
	Expr  goto 35
	Sexpr  goto 25


state 16
	ProgG : ProgG VAR Lexpr . ';'  (7)

	';'  shift 36
	.  error


state 17
	ProgG : ProgG TIPO VAR . Ltipo '{' Prog '}'  (6)
	Eatrib : VAR .  (21)
	Eatrib : VAR . '[' Expr ']'  (22)
	Eatrib : VAR . '=' Expr  (23)
	Eatrib : VAR . '[' Expr ']' '=' Expr  (24)

	'='  shift 37
	'['  shift 38
	'('  shift 39
	';'  reduce 21
	','  reduce 21

	Ltipo  goto 40


state 18
	ProgG : ProgG TIPO Eatrib . ';'  (3)
	Eatrib : Eatrib . ',' VAR '=' Expr  (25)
	Eatrib : Eatrib . ',' VAR  (26)

	';'  shift 41
	','  shift 42
	.  error


state 19
	Sexpr : VAR .  (48)
	Sexpr : VAR . '[' Expr ']'  (50)
	Sexpr : VAR . Lexpr  (51)

	'['  shift 43
	'('  shift 15
	EQ  reduce 48
	NEQ  reduce 48
	LEQ  reduce 48
	GEQ  reduce 48
	';'  reduce 48
	']'  reduce 48
	','  reduce 48
	')'  reduce 48
	'<'  reduce 48
	'>'  reduce 48
	'+'  reduce 48
	'-'  reduce 48
	'*'  reduce 48
	'/'  reduce 48
	'%'  reduce 48

	Lexpr  goto 44


state 20
	Cond : NUM .  (38)
	Sexpr : NUM .  (49)

	EQ  reduce 49
	NEQ  reduce 49
	LEQ  reduce 49
	GEQ  reduce 49
	E  reduce 38
	OU  reduce 38
	')'  reduce 49
	'<'  reduce 49
	'>'  reduce 49
	'+'  reduce 49
	'-'  reduce 49
	'*'  reduce 49
	'/'  reduce 49
	'%'  reduce 49


state 21
	Sexpr : STR .  (52)

	.  reduce 52


state 22
	Cond : '(' . Expr EQ Expr ')'  (39)
	Cond : '(' . Expr NEQ Expr ')'  (40)
	Cond : '(' . Expr '<' Expr ')'  (41)
	Cond : '(' . Expr '>' Expr ')'  (42)
	Cond : '(' . Expr LEQ Expr ')'  (43)
	Cond : '(' . Expr GEQ Expr ')'  (44)
	Cond : '(' . Cond E Cond ')'  (45)
	Cond : '(' . Cond OU Cond ')'  (46)
	Expr : '(' . Expr '+' Expr ')'  (53)
	Expr : '(' . Expr '-' Expr ')'  (54)
	Expr : '(' . Expr '*' Expr ')'  (55)
	Expr : '(' . Expr '/' Expr ')'  (56)
	Expr : '(' . Expr '%' Expr ')'  (57)
	Expr : '(' . Expr ')'  (58)

	VAR  shift 19
	NUM  shift 20
	STR  shift 21
	'('  shift 22
	'!'  shift 10
	.  error

	Cond  goto 23
	Expr  goto 45
	Sexpr  goto 25


state 23
	Cond : '(' Cond . E Cond ')'  (45)
	Cond : '(' Cond . OU Cond ')'  (46)

	E  shift 46
	OU  shift 47
	.  error


state 24
	Cond : '(' Expr . EQ Expr ')'  (39)
	Cond : '(' Expr . NEQ Expr ')'  (40)
	Cond : '(' Expr . '<' Expr ')'  (41)
	Cond : '(' Expr . '>' Expr ')'  (42)
	Cond : '(' Expr . LEQ Expr ')'  (43)
	Cond : '(' Expr . GEQ Expr ')'  (44)

	EQ  shift 48
	NEQ  shift 49
	LEQ  shift 50
	GEQ  shift 51
	'<'  shift 52
	'>'  shift 53
	.  error


state 25
	Expr : Sexpr .  (59)

	.  reduce 59


state 26
	Cond : '!' Cond .  (47)

	.  reduce 47


state 27
	ProgG : ProgG SE Cond '{' . ProgG '}' Se  (1)
	ProgG : .  (10)

	.  reduce 10

	ProgG  goto 54


state 28
	ProgG : ProgG ENQ Cond '{' . ProgG '}'  (2)
	ProgG : .  (10)

	.  reduce 10

	ProgG  goto 55


state 29
	Sexpr : NUM .  (49)

	.  reduce 49


state 30
	Expr : '(' . Expr '+' Expr ')'  (53)
	Expr : '(' . Expr '-' Expr ')'  (54)
	Expr : '(' . Expr '*' Expr ')'  (55)
	Expr : '(' . Expr '/' Expr ')'  (56)
	Expr : '(' . Expr '%' Expr ')'  (57)
	Expr : '(' . Expr ')'  (58)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 56
	Sexpr  goto 25


state 31
	ProgG : ProgG VAR '=' Expr . ';'  (4)

	';'  shift 57
	.  error


state 32
	ProgG : ProgG VAR '[' Expr . ']' '=' Expr ';'  (5)

	']'  shift 58
	.  error


state 33
	Lexpr : '(' ')' .  (27)

	.  reduce 27


state 34
	Lexpr : '(' Eexpr . ')'  (28)
	Eexpr : Eexpr . ',' Expr  (30)

	','  shift 59
	')'  shift 60
	.  error


state 35
	Eexpr : Expr .  (29)

	.  reduce 29


state 36
	ProgG : ProgG VAR Lexpr ';' .  (7)

	.  reduce 7


state 37
	Eatrib : VAR '=' . Expr  (23)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 61
	Sexpr  goto 25


state 38
	Eatrib : VAR '[' . Expr ']'  (22)
	Eatrib : VAR '[' . Expr ']' '=' Expr  (24)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 62
	Sexpr  goto 25


state 39
	Ltipo : '(' . ')'  (31)
	Ltipo : '(' . Etipo ')'  (32)

	TIPO  shift 63
	')'  shift 64
	.  error

	Etipo  goto 65


state 40
	ProgG : ProgG TIPO VAR Ltipo . '{' Prog '}'  (6)

	'{'  shift 66
	.  error


state 41
	ProgG : ProgG TIPO Eatrib ';' .  (3)

	.  reduce 3


state 42
	Eatrib : Eatrib ',' . VAR '=' Expr  (25)
	Eatrib : Eatrib ',' . VAR  (26)

	VAR  shift 67
	.  error


state 43
	Sexpr : VAR '[' . Expr ']'  (50)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 68
	Sexpr  goto 25


state 44
	Sexpr : VAR Lexpr .  (51)

	.  reduce 51


state 45
	Cond : '(' Expr . EQ Expr ')'  (39)
	Cond : '(' Expr . NEQ Expr ')'  (40)
	Cond : '(' Expr . '<' Expr ')'  (41)
	Cond : '(' Expr . '>' Expr ')'  (42)
	Cond : '(' Expr . LEQ Expr ')'  (43)
	Cond : '(' Expr . GEQ Expr ')'  (44)
	Expr : '(' Expr . '+' Expr ')'  (53)
	Expr : '(' Expr . '-' Expr ')'  (54)
	Expr : '(' Expr . '*' Expr ')'  (55)
	Expr : '(' Expr . '/' Expr ')'  (56)
	Expr : '(' Expr . '%' Expr ')'  (57)
	Expr : '(' Expr . ')'  (58)

	EQ  shift 48
	NEQ  shift 49
	LEQ  shift 50
	GEQ  shift 51
	')'  shift 69
	'<'  shift 52
	'>'  shift 53
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	.  error


state 46
	Cond : '(' Cond E . Cond ')'  (45)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 75


state 47
	Cond : '(' Cond OU . Cond ')'  (46)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 76


state 48
	Cond : '(' Expr EQ . Expr ')'  (39)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 77
	Sexpr  goto 25


state 49
	Cond : '(' Expr NEQ . Expr ')'  (40)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 78
	Sexpr  goto 25


state 50
	Cond : '(' Expr LEQ . Expr ')'  (43)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 79
	Sexpr  goto 25


state 51
	Cond : '(' Expr GEQ . Expr ')'  (44)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 80
	Sexpr  goto 25


state 52
	Cond : '(' Expr '<' . Expr ')'  (41)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 81
	Sexpr  goto 25


state 53
	Cond : '(' Expr '>' . Expr ')'  (42)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 82
	Sexpr  goto 25


state 54
	ProgG : ProgG . SE Cond '{' ProgG '}' Se  (1)
	ProgG : ProgG SE Cond '{' ProgG . '}' Se  (1)
	ProgG : ProgG . ENQ Cond '{' ProgG '}'  (2)
	ProgG : ProgG . TIPO Eatrib ';'  (3)
	ProgG : ProgG . VAR '=' Expr ';'  (4)
	ProgG : ProgG . VAR '[' Expr ']' '=' Expr ';'  (5)
	ProgG : ProgG . TIPO VAR Ltipo '{' Prog '}'  (6)
	ProgG : ProgG . VAR Lexpr ';'  (7)
	ProgG : ProgG . ';'  (8)
	ProgG : ProgG . COM  (9)

	SE  shift 2
	ENQ  shift 3
	VAR  shift 4
	TIPO  shift 5
	COM  shift 6
	'}'  shift 83
	';'  shift 7
	.  error


state 55
	ProgG : ProgG . SE Cond '{' ProgG '}' Se  (1)
	ProgG : ProgG . ENQ Cond '{' ProgG '}'  (2)
	ProgG : ProgG ENQ Cond '{' ProgG . '}'  (2)
	ProgG : ProgG . TIPO Eatrib ';'  (3)
	ProgG : ProgG . VAR '=' Expr ';'  (4)
	ProgG : ProgG . VAR '[' Expr ']' '=' Expr ';'  (5)
	ProgG : ProgG . TIPO VAR Ltipo '{' Prog '}'  (6)
	ProgG : ProgG . VAR Lexpr ';'  (7)
	ProgG : ProgG . ';'  (8)
	ProgG : ProgG . COM  (9)

	SE  shift 2
	ENQ  shift 3
	VAR  shift 4
	TIPO  shift 5
	COM  shift 6
	'}'  shift 84
	';'  shift 7
	.  error


state 56
	Expr : '(' Expr . '+' Expr ')'  (53)
	Expr : '(' Expr . '-' Expr ')'  (54)
	Expr : '(' Expr . '*' Expr ')'  (55)
	Expr : '(' Expr . '/' Expr ')'  (56)
	Expr : '(' Expr . '%' Expr ')'  (57)
	Expr : '(' Expr . ')'  (58)

	')'  shift 69
	'+'  shift 70
	'-'  shift 71
	'*'  shift 72
	'/'  shift 73
	'%'  shift 74
	.  error


state 57
	ProgG : ProgG VAR '=' Expr ';' .  (4)

	.  reduce 4


state 58
	ProgG : ProgG VAR '[' Expr ']' . '=' Expr ';'  (5)

	'='  shift 85
	.  error


state 59
	Eexpr : Eexpr ',' . Expr  (30)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 86
	Sexpr  goto 25


state 60
	Lexpr : '(' Eexpr ')' .  (28)

	.  reduce 28


state 61
	Eatrib : VAR '=' Expr .  (23)

	.  reduce 23


state 62
	Eatrib : VAR '[' Expr . ']'  (22)
	Eatrib : VAR '[' Expr . ']' '=' Expr  (24)

	']'  shift 87
	.  error


state 63
	Etipo : TIPO . VAR  (33)

	VAR  shift 88
	.  error


state 64
	Ltipo : '(' ')' .  (31)

	.  reduce 31


state 65
	Ltipo : '(' Etipo . ')'  (32)
	Etipo : Etipo . ',' TIPO VAR  (34)

	','  shift 89
	')'  shift 90
	.  error


state 66
	ProgG : ProgG TIPO VAR Ltipo '{' . Prog '}'  (6)
	Prog : .  (20)

	.  reduce 20

	Prog  goto 91


state 67
	Eatrib : Eatrib ',' VAR . '=' Expr  (25)
	Eatrib : Eatrib ',' VAR .  (26)

	'='  shift 92
	';'  reduce 26
	','  reduce 26


state 68
	Sexpr : VAR '[' Expr . ']'  (50)

	']'  shift 93
	.  error


state 69
	Expr : '(' Expr ')' .  (58)

	.  reduce 58


state 70
	Expr : '(' Expr '+' . Expr ')'  (53)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 94
	Sexpr  goto 25


state 71
	Expr : '(' Expr '-' . Expr ')'  (54)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 95
	Sexpr  goto 25


state 72
	Expr : '(' Expr '*' . Expr ')'  (55)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 96
	Sexpr  goto 25


state 73
	Expr : '(' Expr '/' . Expr ')'  (56)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 97
	Sexpr  goto 25


state 74
	Expr : '(' Expr '%' . Expr ')'  (57)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 98
	Sexpr  goto 25


state 75
	Cond : '(' Cond E Cond . ')'  (45)

	')'  shift 99
	.  error


state 76
	Cond : '(' Cond OU Cond . ')'  (46)

	')'  shift 100
	.  error


state 77
	Cond : '(' Expr EQ Expr . ')'  (39)

	')'  shift 101
	.  error


state 78
	Cond : '(' Expr NEQ Expr . ')'  (40)

	')'  shift 102
	.  error


state 79
	Cond : '(' Expr LEQ Expr . ')'  (43)

	')'  shift 103
	.  error


state 80
	Cond : '(' Expr GEQ Expr . ')'  (44)

	')'  shift 104
	.  error


state 81
	Cond : '(' Expr '<' Expr . ')'  (41)

	')'  shift 105
	.  error


state 82
	Cond : '(' Expr '>' Expr . ')'  (42)

	')'  shift 106
	.  error


state 83
	ProgG : ProgG SE Cond '{' ProgG '}' . Se  (1)
	Se : .  (35)

	SENAO  shift 107
	CASO  shift 108
	$end  reduce 35
	SE  reduce 35
	ENQ  reduce 35
	VAR  reduce 35
	TIPO  reduce 35
	COM  reduce 35
	'}'  reduce 35
	';'  reduce 35

	Se  goto 109


state 84
	ProgG : ProgG ENQ Cond '{' ProgG '}' .  (2)

	.  reduce 2


state 85
	ProgG : ProgG VAR '[' Expr ']' '=' . Expr ';'  (5)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 110
	Sexpr  goto 25


state 86
	Eexpr : Eexpr ',' Expr .  (30)

	.  reduce 30


state 87
	Eatrib : VAR '[' Expr ']' .  (22)
	Eatrib : VAR '[' Expr ']' . '=' Expr  (24)

	'='  shift 111
	';'  reduce 22
	','  reduce 22


state 88
	Etipo : TIPO VAR .  (33)

	.  reduce 33


state 89
	Etipo : Etipo ',' . TIPO VAR  (34)

	TIPO  shift 112
	.  error


state 90
	Ltipo : '(' Etipo ')' .  (32)

	.  reduce 32


state 91
	ProgG : ProgG TIPO VAR Ltipo '{' Prog . '}'  (6)
	Prog : Prog . SE Cond '{' Prog '}' Se  (11)
	Prog : Prog . ENQ Cond '{' Prog '}'  (12)
	Prog : Prog . TIPO Eatrib ';'  (13)
	Prog : Prog . VAR '=' Expr ';'  (14)
	Prog : Prog . VAR '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog . VAR Lexpr ';'  (16)
	Prog : Prog . ';'  (17)
	Prog : Prog . COM  (18)
	Prog : Prog . RETURN Expr ';'  (19)

	SE  shift 113
	ENQ  shift 114
	VAR  shift 115
	TIPO  shift 116
	COM  shift 117
	RETURN  shift 118
	'}'  shift 119
	';'  shift 120
	.  error


state 92
	Eatrib : Eatrib ',' VAR '=' . Expr  (25)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 121
	Sexpr  goto 25


state 93
	Sexpr : VAR '[' Expr ']' .  (50)

	.  reduce 50


state 94
	Expr : '(' Expr '+' Expr . ')'  (53)

	')'  shift 122
	.  error


state 95
	Expr : '(' Expr '-' Expr . ')'  (54)

	')'  shift 123
	.  error


state 96
	Expr : '(' Expr '*' Expr . ')'  (55)

	')'  shift 124
	.  error


state 97
	Expr : '(' Expr '/' Expr . ')'  (56)

	')'  shift 125
	.  error


state 98
	Expr : '(' Expr '%' Expr . ')'  (57)

	')'  shift 126
	.  error


state 99
	Cond : '(' Cond E Cond ')' .  (45)

	.  reduce 45


state 100
	Cond : '(' Cond OU Cond ')' .  (46)

	.  reduce 46


state 101
	Cond : '(' Expr EQ Expr ')' .  (39)

	.  reduce 39


state 102
	Cond : '(' Expr NEQ Expr ')' .  (40)

	.  reduce 40


state 103
	Cond : '(' Expr LEQ Expr ')' .  (43)

	.  reduce 43


state 104
	Cond : '(' Expr GEQ Expr ')' .  (44)

	.  reduce 44


state 105
	Cond : '(' Expr '<' Expr ')' .  (41)

	.  reduce 41


state 106
	Cond : '(' Expr '>' Expr ')' .  (42)

	.  reduce 42


state 107
	Se : SENAO . '{' Prog '}'  (37)

	'{'  shift 127
	.  error


state 108
	Se : CASO . Cond '{' Prog '}' Se  (36)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 128


state 109
	ProgG : ProgG SE Cond '{' ProgG '}' Se .  (1)

	.  reduce 1


state 110
	ProgG : ProgG VAR '[' Expr ']' '=' Expr . ';'  (5)

	';'  shift 129
	.  error


state 111
	Eatrib : VAR '[' Expr ']' '=' . Expr  (24)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 130
	Sexpr  goto 25


state 112
	Etipo : Etipo ',' TIPO . VAR  (34)

	VAR  shift 131
	.  error


state 113
	Prog : Prog SE . Cond '{' Prog '}' Se  (11)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 132


state 114
	Prog : Prog ENQ . Cond '{' Prog '}'  (12)

	NUM  shift 8
	'('  shift 9
	'!'  shift 10
	.  error

	Cond  goto 133


state 115
	Prog : Prog VAR . '=' Expr ';'  (14)
	Prog : Prog VAR . '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog VAR . Lexpr ';'  (16)

	'='  shift 134
	'['  shift 135
	'('  shift 15
	.  error

	Lexpr  goto 136


state 116
	Prog : Prog TIPO . Eatrib ';'  (13)

	VAR  shift 137
	.  error

	Eatrib  goto 138


state 117
	Prog : Prog COM .  (18)

	.  reduce 18


state 118
	Prog : Prog RETURN . Expr ';'  (19)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 139
	Sexpr  goto 25


state 119
	ProgG : ProgG TIPO VAR Ltipo '{' Prog '}' .  (6)

	.  reduce 6


state 120
	Prog : Prog ';' .  (17)

	.  reduce 17


state 121
	Eatrib : Eatrib ',' VAR '=' Expr .  (25)

	.  reduce 25


state 122
	Expr : '(' Expr '+' Expr ')' .  (53)

	.  reduce 53


state 123
	Expr : '(' Expr '-' Expr ')' .  (54)

	.  reduce 54


state 124
	Expr : '(' Expr '*' Expr ')' .  (55)

	.  reduce 55


state 125
	Expr : '(' Expr '/' Expr ')' .  (56)

	.  reduce 56


state 126
	Expr : '(' Expr '%' Expr ')' .  (57)

	.  reduce 57


state 127
	Se : SENAO '{' . Prog '}'  (37)
	Prog : .  (20)

	.  reduce 20

	Prog  goto 140


state 128
	Se : CASO Cond . '{' Prog '}' Se  (36)

	'{'  shift 141
	.  error


state 129
	ProgG : ProgG VAR '[' Expr ']' '=' Expr ';' .  (5)

	.  reduce 5


state 130
	Eatrib : VAR '[' Expr ']' '=' Expr .  (24)

	.  reduce 24


state 131
	Etipo : Etipo ',' TIPO VAR .  (34)

	.  reduce 34


state 132
	Prog : Prog SE Cond . '{' Prog '}' Se  (11)

	'{'  shift 142
	.  error


state 133
	Prog : Prog ENQ Cond . '{' Prog '}'  (12)

	'{'  shift 143
	.  error


state 134
	Prog : Prog VAR '=' . Expr ';'  (14)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 144
	Sexpr  goto 25


state 135
	Prog : Prog VAR '[' . Expr ']' '=' Expr ';'  (15)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 145
	Sexpr  goto 25


state 136
	Prog : Prog VAR Lexpr . ';'  (16)

	';'  shift 146
	.  error


state 137
	Eatrib : VAR .  (21)
	Eatrib : VAR . '[' Expr ']'  (22)
	Eatrib : VAR . '=' Expr  (23)
	Eatrib : VAR . '[' Expr ']' '=' Expr  (24)

	'='  shift 37
	'['  shift 38
	';'  reduce 21
	','  reduce 21


state 138
	Prog : Prog TIPO Eatrib . ';'  (13)
	Eatrib : Eatrib . ',' VAR '=' Expr  (25)
	Eatrib : Eatrib . ',' VAR  (26)

	';'  shift 147
	','  shift 42
	.  error


state 139
	Prog : Prog RETURN Expr . ';'  (19)

	';'  shift 148
	.  error


state 140
	Prog : Prog . SE Cond '{' Prog '}' Se  (11)
	Prog : Prog . ENQ Cond '{' Prog '}'  (12)
	Prog : Prog . TIPO Eatrib ';'  (13)
	Prog : Prog . VAR '=' Expr ';'  (14)
	Prog : Prog . VAR '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog . VAR Lexpr ';'  (16)
	Prog : Prog . ';'  (17)
	Prog : Prog . COM  (18)
	Prog : Prog . RETURN Expr ';'  (19)
	Se : SENAO '{' Prog . '}'  (37)

	SE  shift 113
	ENQ  shift 114
	VAR  shift 115
	TIPO  shift 116
	COM  shift 117
	RETURN  shift 118
	'}'  shift 149
	';'  shift 120
	.  error


state 141
	Se : CASO Cond '{' . Prog '}' Se  (36)
	Prog : .  (20)

	.  reduce 20

	Prog  goto 150


state 142
	Prog : Prog SE Cond '{' . Prog '}' Se  (11)
	Prog : .  (20)

	.  reduce 20

	Prog  goto 151


state 143
	Prog : Prog ENQ Cond '{' . Prog '}'  (12)
	Prog : .  (20)

	.  reduce 20

	Prog  goto 152


state 144
	Prog : Prog VAR '=' Expr . ';'  (14)

	';'  shift 153
	.  error


state 145
	Prog : Prog VAR '[' Expr . ']' '=' Expr ';'  (15)

	']'  shift 154
	.  error


state 146
	Prog : Prog VAR Lexpr ';' .  (16)

	.  reduce 16


state 147
	Prog : Prog TIPO Eatrib ';' .  (13)

	.  reduce 13


state 148
	Prog : Prog RETURN Expr ';' .  (19)

	.  reduce 19


state 149
	Se : SENAO '{' Prog '}' .  (37)

	.  reduce 37


state 150
	Prog : Prog . SE Cond '{' Prog '}' Se  (11)
	Prog : Prog . ENQ Cond '{' Prog '}'  (12)
	Prog : Prog . TIPO Eatrib ';'  (13)
	Prog : Prog . VAR '=' Expr ';'  (14)
	Prog : Prog . VAR '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog . VAR Lexpr ';'  (16)
	Prog : Prog . ';'  (17)
	Prog : Prog . COM  (18)
	Prog : Prog . RETURN Expr ';'  (19)
	Se : CASO Cond '{' Prog . '}' Se  (36)

	SE  shift 113
	ENQ  shift 114
	VAR  shift 115
	TIPO  shift 116
	COM  shift 117
	RETURN  shift 118
	'}'  shift 155
	';'  shift 120
	.  error


state 151
	Prog : Prog . SE Cond '{' Prog '}' Se  (11)
	Prog : Prog SE Cond '{' Prog . '}' Se  (11)
	Prog : Prog . ENQ Cond '{' Prog '}'  (12)
	Prog : Prog . TIPO Eatrib ';'  (13)
	Prog : Prog . VAR '=' Expr ';'  (14)
	Prog : Prog . VAR '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog . VAR Lexpr ';'  (16)
	Prog : Prog . ';'  (17)
	Prog : Prog . COM  (18)
	Prog : Prog . RETURN Expr ';'  (19)

	SE  shift 113
	ENQ  shift 114
	VAR  shift 115
	TIPO  shift 116
	COM  shift 117
	RETURN  shift 118
	'}'  shift 156
	';'  shift 120
	.  error


state 152
	Prog : Prog . SE Cond '{' Prog '}' Se  (11)
	Prog : Prog . ENQ Cond '{' Prog '}'  (12)
	Prog : Prog ENQ Cond '{' Prog . '}'  (12)
	Prog : Prog . TIPO Eatrib ';'  (13)
	Prog : Prog . VAR '=' Expr ';'  (14)
	Prog : Prog . VAR '[' Expr ']' '=' Expr ';'  (15)
	Prog : Prog . VAR Lexpr ';'  (16)
	Prog : Prog . ';'  (17)
	Prog : Prog . COM  (18)
	Prog : Prog . RETURN Expr ';'  (19)

	SE  shift 113
	ENQ  shift 114
	VAR  shift 115
	TIPO  shift 116
	COM  shift 117
	RETURN  shift 118
	'}'  shift 157
	';'  shift 120
	.  error


state 153
	Prog : Prog VAR '=' Expr ';' .  (14)

	.  reduce 14


state 154
	Prog : Prog VAR '[' Expr ']' . '=' Expr ';'  (15)

	'='  shift 158
	.  error


state 155
	Se : CASO Cond '{' Prog '}' . Se  (36)
	Se : .  (35)

	SENAO  shift 107
	CASO  shift 108
	$end  reduce 35
	SE  reduce 35
	ENQ  reduce 35
	VAR  reduce 35
	TIPO  reduce 35
	COM  reduce 35
	RETURN  reduce 35
	'}'  reduce 35
	';'  reduce 35

	Se  goto 159


state 156
	Prog : Prog SE Cond '{' Prog '}' . Se  (11)
	Se : .  (35)

	SENAO  shift 107
	CASO  shift 108
	SE  reduce 35
	ENQ  reduce 35
	VAR  reduce 35
	TIPO  reduce 35
	COM  reduce 35
	RETURN  reduce 35
	'}'  reduce 35
	';'  reduce 35

	Se  goto 160


state 157
	Prog : Prog ENQ Cond '{' Prog '}' .  (12)

	.  reduce 12


state 158
	Prog : Prog VAR '[' Expr ']' '=' . Expr ';'  (15)

	VAR  shift 19
	NUM  shift 29
	STR  shift 21
	'('  shift 30
	.  error

	Expr  goto 161
	Sexpr  goto 25


state 159
	Se : CASO Cond '{' Prog '}' Se .  (36)

	.  reduce 36


state 160
	Prog : Prog SE Cond '{' Prog '}' Se .  (11)

	.  reduce 11


state 161
	Prog : Prog VAR '[' Expr ']' '=' Expr . ';'  (15)

	';'  shift 162
	.  error


state 162
	Prog : Prog VAR '[' Expr ']' '=' Expr ';' .  (15)

	.  reduce 15


35 terminals, 12 nonterminals
60 grammar rules, 163 states
