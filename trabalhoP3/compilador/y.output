Grammar

    0 $accept: Prog $end

    1 Prog: SE Cond '{' Prog '}' Se
    2     | ENQ Cond '{' Prog '}' Prog
    3     | TIPO Eatrib ';' Prog
    4     | TIPO VAR Ltipo '{' Prog '}' Prog
    5     | VAR Lexpr ';' Prog
    6     | ';' Prog
    7     | %empty

    8 Eatrib: VAR
    9       | VAR '=' Expr
   10       | Eatrib ',' VAR '=' Expr
   11       | Eatrib ',' VAR

   12 Lexpr: '(' ')'
   13      | '(' Eexpr ')'

   14 Eexpr: Expr
   15      | Eexpr ',' Expr

   16 Ltipo: '(' ')'
   17      | '(' Etipo ')'

   18 Etipo: TIPO VAR
   19      | Etipo ',' TIPO VAR

   20 Se: Prog
   21   | CASO Cond '{' Prog '}' SE
   22   | SENAO '{' Prog '}' Prog

   23 Cond: VERDADE
   24     | FALSO

   25 Expr: VAR
   26     | VAR '(' ')'
   27     | NUM


Terminals, with rules where they appear

$end (0) 0
'(' (40) 12 13 16 17 26
')' (41) 12 13 16 17 26
',' (44) 10 11 15 19
';' (59) 3 5 6
'=' (61) 9 10
'{' (123) 1 2 4 21 22
'}' (125) 1 2 4 21 22
error (256)
SE (258) 1 21
SENAO (259) 22
VERDADE (260) 23
FALSO (261) 24
CASO (262) 21
ENQ (263) 2
VAR (264) 4 5 8 9 10 11 18 19 25 26
TIPO (265) 3 4 18 19
NUM (266) 27


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
Prog (20)
    on left: 1 2 3 4 5 6 7, on right: 0 1 2 3 4 5 6 20 21 22
Eatrib (21)
    on left: 8 9 10 11, on right: 3 10 11
Lexpr (22)
    on left: 12 13, on right: 5
Eexpr (23)
    on left: 14 15, on right: 13 15
Ltipo (24)
    on left: 16 17, on right: 4
Etipo (25)
    on left: 18 19, on right: 17 19
Se (26)
    on left: 20 21 22, on right: 1
Cond (27)
    on left: 23 24, on right: 1 2 21
Expr (28)
    on left: 25 26 27, on right: 9 10 14 15


State 0

    0 $accept: . Prog $end

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 6


State 1

    1 Prog: SE . Cond '{' Prog '}' Se

    VERDADE  shift, and go to state 7
    FALSO    shift, and go to state 8

    Cond  go to state 9


State 2

    2 Prog: ENQ . Cond '{' Prog '}' Prog

    VERDADE  shift, and go to state 7
    FALSO    shift, and go to state 8

    Cond  go to state 10


State 3

    5 Prog: VAR . Lexpr ';' Prog

    '('  shift, and go to state 11

    Lexpr  go to state 12


State 4

    3 Prog: TIPO . Eatrib ';' Prog
    4     | TIPO . VAR Ltipo '{' Prog '}' Prog

    VAR  shift, and go to state 13

    Eatrib  go to state 14


State 5

    6 Prog: ';' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 15


State 6

    0 $accept: Prog . $end

    $end  shift, and go to state 16


State 7

   23 Cond: VERDADE .

    $default  reduce using rule 23 (Cond)


State 8

   24 Cond: FALSO .

    $default  reduce using rule 24 (Cond)


State 9

    1 Prog: SE Cond . '{' Prog '}' Se

    '{'  shift, and go to state 17


State 10

    2 Prog: ENQ Cond . '{' Prog '}' Prog

    '{'  shift, and go to state 18


State 11

   12 Lexpr: '(' . ')'
   13      | '(' . Eexpr ')'

    VAR  shift, and go to state 19
    NUM  shift, and go to state 20
    ')'  shift, and go to state 21

    Eexpr  go to state 22
    Expr   go to state 23


State 12

    5 Prog: VAR Lexpr . ';' Prog

    ';'  shift, and go to state 24


State 13

    4 Prog: TIPO VAR . Ltipo '{' Prog '}' Prog
    8 Eatrib: VAR .
    9       | VAR . '=' Expr

    '='  shift, and go to state 25
    '('  shift, and go to state 26

    $default  reduce using rule 8 (Eatrib)

    Ltipo  go to state 27


State 14

    3 Prog: TIPO Eatrib . ';' Prog
   10 Eatrib: Eatrib . ',' VAR '=' Expr
   11       | Eatrib . ',' VAR

    ';'  shift, and go to state 28
    ','  shift, and go to state 29


State 15

    6 Prog: ';' Prog .

    $default  reduce using rule 6 (Prog)


State 16

    0 $accept: Prog $end .

    $default  accept


State 17

    1 Prog: SE Cond '{' . Prog '}' Se

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 30


State 18

    2 Prog: ENQ Cond '{' . Prog '}' Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 31


State 19

   25 Expr: VAR .
   26     | VAR . '(' ')'

    '('  shift, and go to state 32

    $default  reduce using rule 25 (Expr)


State 20

   27 Expr: NUM .

    $default  reduce using rule 27 (Expr)


State 21

   12 Lexpr: '(' ')' .

    $default  reduce using rule 12 (Lexpr)


State 22

   13 Lexpr: '(' Eexpr . ')'
   15 Eexpr: Eexpr . ',' Expr

    ','  shift, and go to state 33
    ')'  shift, and go to state 34


State 23

   14 Eexpr: Expr .

    $default  reduce using rule 14 (Eexpr)


State 24

    5 Prog: VAR Lexpr ';' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 35


State 25

    9 Eatrib: VAR '=' . Expr

    VAR  shift, and go to state 19
    NUM  shift, and go to state 20

    Expr  go to state 36


State 26

   16 Ltipo: '(' . ')'
   17      | '(' . Etipo ')'

    TIPO  shift, and go to state 37
    ')'   shift, and go to state 38

    Etipo  go to state 39


State 27

    4 Prog: TIPO VAR Ltipo . '{' Prog '}' Prog

    '{'  shift, and go to state 40


State 28

    3 Prog: TIPO Eatrib ';' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 41


State 29

   10 Eatrib: Eatrib ',' . VAR '=' Expr
   11       | Eatrib ',' . VAR

    VAR  shift, and go to state 42


State 30

    1 Prog: SE Cond '{' Prog . '}' Se

    '}'  shift, and go to state 43


State 31

    2 Prog: ENQ Cond '{' Prog . '}' Prog

    '}'  shift, and go to state 44


State 32

   26 Expr: VAR '(' . ')'

    ')'  shift, and go to state 45


State 33

   15 Eexpr: Eexpr ',' . Expr

    VAR  shift, and go to state 19
    NUM  shift, and go to state 20

    Expr  go to state 46


State 34

   13 Lexpr: '(' Eexpr ')' .

    $default  reduce using rule 13 (Lexpr)


State 35

    5 Prog: VAR Lexpr ';' Prog .

    $default  reduce using rule 5 (Prog)


State 36

    9 Eatrib: VAR '=' Expr .

    $default  reduce using rule 9 (Eatrib)


State 37

   18 Etipo: TIPO . VAR

    VAR  shift, and go to state 47


State 38

   16 Ltipo: '(' ')' .

    $default  reduce using rule 16 (Ltipo)


State 39

   17 Ltipo: '(' Etipo . ')'
   19 Etipo: Etipo . ',' TIPO VAR

    ','  shift, and go to state 48
    ')'  shift, and go to state 49


State 40

    4 Prog: TIPO VAR Ltipo '{' . Prog '}' Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 50


State 41

    3 Prog: TIPO Eatrib ';' Prog .

    $default  reduce using rule 3 (Prog)


State 42

   10 Eatrib: Eatrib ',' VAR . '=' Expr
   11       | Eatrib ',' VAR .

    '='  shift, and go to state 51

    $default  reduce using rule 11 (Eatrib)


State 43

    1 Prog: SE Cond '{' Prog '}' . Se

    SE     shift, and go to state 1
    SENAO  shift, and go to state 52
    CASO   shift, and go to state 53
    ENQ    shift, and go to state 2
    VAR    shift, and go to state 3
    TIPO   shift, and go to state 4
    ';'    shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 54
    Se    go to state 55


State 44

    2 Prog: ENQ Cond '{' Prog '}' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 56


State 45

   26 Expr: VAR '(' ')' .

    $default  reduce using rule 26 (Expr)


State 46

   15 Eexpr: Eexpr ',' Expr .

    $default  reduce using rule 15 (Eexpr)


State 47

   18 Etipo: TIPO VAR .

    $default  reduce using rule 18 (Etipo)


State 48

   19 Etipo: Etipo ',' . TIPO VAR

    TIPO  shift, and go to state 57


State 49

   17 Ltipo: '(' Etipo ')' .

    $default  reduce using rule 17 (Ltipo)


State 50

    4 Prog: TIPO VAR Ltipo '{' Prog . '}' Prog

    '}'  shift, and go to state 58


State 51

   10 Eatrib: Eatrib ',' VAR '=' . Expr

    VAR  shift, and go to state 19
    NUM  shift, and go to state 20

    Expr  go to state 59


State 52

   22 Se: SENAO . '{' Prog '}' Prog

    '{'  shift, and go to state 60


State 53

   21 Se: CASO . Cond '{' Prog '}' SE

    VERDADE  shift, and go to state 7
    FALSO    shift, and go to state 8

    Cond  go to state 61


State 54

   20 Se: Prog .

    $default  reduce using rule 20 (Se)


State 55

    1 Prog: SE Cond '{' Prog '}' Se .

    $default  reduce using rule 1 (Prog)


State 56

    2 Prog: ENQ Cond '{' Prog '}' Prog .

    $default  reduce using rule 2 (Prog)


State 57

   19 Etipo: Etipo ',' TIPO . VAR

    VAR  shift, and go to state 62


State 58

    4 Prog: TIPO VAR Ltipo '{' Prog '}' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 63


State 59

   10 Eatrib: Eatrib ',' VAR '=' Expr .

    $default  reduce using rule 10 (Eatrib)


State 60

   22 Se: SENAO '{' . Prog '}' Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 64


State 61

   21 Se: CASO Cond . '{' Prog '}' SE

    '{'  shift, and go to state 65


State 62

   19 Etipo: Etipo ',' TIPO VAR .

    $default  reduce using rule 19 (Etipo)


State 63

    4 Prog: TIPO VAR Ltipo '{' Prog '}' Prog .

    $default  reduce using rule 4 (Prog)


State 64

   22 Se: SENAO '{' Prog . '}' Prog

    '}'  shift, and go to state 66


State 65

   21 Se: CASO Cond '{' . Prog '}' SE

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 67


State 66

   22 Se: SENAO '{' Prog '}' . Prog

    SE    shift, and go to state 1
    ENQ   shift, and go to state 2
    VAR   shift, and go to state 3
    TIPO  shift, and go to state 4
    ';'   shift, and go to state 5

    $default  reduce using rule 7 (Prog)

    Prog  go to state 68


State 67

   21 Se: CASO Cond '{' Prog . '}' SE

    '}'  shift, and go to state 69


State 68

   22 Se: SENAO '{' Prog '}' Prog .

    $default  reduce using rule 22 (Se)


State 69

   21 Se: CASO Cond '{' Prog '}' . SE

    SE  shift, and go to state 70


State 70

   21 Se: CASO Cond '{' Prog '}' SE .

    $default  reduce using rule 21 (Se)
