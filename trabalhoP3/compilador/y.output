State 30 conflicts: 1 shift/reduce


Grammar

    0 $accept: ProgG $end

    1 ProgG: ProgG Se
    2      | ProgG Enq
    3      | ProgG Atrib ';'
    4      | ProgG VAR '=' Expr ';'
    5      | ProgG IgualL ';'
    6      | ProgG CriaFun
    7      | ProgG Funcao ';'
    8      | ProgG ';'
    9      | ProgG COM
   10      | %empty

   11 ProgF: ProgF Se
   12      | ProgF Enq
   13      | ProgF Atrib ';'
   14      | ProgF VAR '=' Expr ';'
   15      | ProgF IgualL ';'
   16      | ProgF Funcao ';'
   17      | ProgF ';'
   18      | ProgF COM
   19      | ProgF RETURN Expr ';'
   20      | %empty

   21 Prog: Prog Se
   22     | Prog Enq
   23     | Prog Atrib ';'
   24     | Prog VAR '=' Expr ';'
   25     | Prog IgualL ';'
   26     | Prog Funcao ';'
   27     | Prog ';'
   28     | Prog COM
   29     | %empty

   30 Funcao: VAR Lexpr

   31 CriaFun: TIPO VAR '('
   32        | Ltipo '{' ProgF '}'

   33 Atrib: TIPO VAR
   34      | TIPO VAR '[' NUM ']'
   35      | TIPO VAR '[' NUM ',' NUM ']'
   36      | Igual

   37 Igual: TIPO VAR '='
   38      | Igual Expr

   39 IgualL: VAR '[' Expr ']'
   40       | IgualL '=' Expr

   41 Lexpr: '(' ')'
   42      | '(' Eexpr ')'

   43 Eexpr: Expr
   44      | Eexpr ',' Expr

   45 Ltipo: ')'
   46      | Etipo ')'

   47 Etipo: TIPO VAR
   48      | Etipo ',' TIPO VAR

   49 Se: SE Cond
   50   | Se '{' Prog '}' SENAO
   51   | Se '{' Prog '}'

   52 Enq: ENQ
   53    | Enq Cond
   54    | Enq '{' Prog '}'

   55 Cond: NUM
   56     | '(' Expr EQ Expr ')'
   57     | '(' Expr NEQ Expr ')'
   58     | '(' Expr '<' Expr ')'
   59     | '(' Expr '>' Expr ')'
   60     | '(' Expr LEQ Expr ')'
   61     | '(' Expr GEQ Expr ')'
   62     | '(' Cond E Cond ')'
   63     | '(' Cond OU Cond ')'
   64     | '!' Cond

   65 Sexpr: VAR
   66      | NUM
   67      | FLOAT
   68      | VAR '[' Expr ']'
   69      | Funcao
   70      | STR

   71 Expr: '(' Expr '+' Expr ')'
   72     | '(' Expr '-' Expr ')'
   73     | '(' Expr '*' Expr ')'
   74     | '(' Expr '/' Expr ')'
   75     | '(' Expr '%' Expr ')'
   76     | COS Expr
   77     | SIN Expr
   78     | '(' Expr ')'
   79     | Sexpr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 64
'%' (37) 75
'(' (40) 31 41 42 56 57 58 59 60 61 62 63 71 72 73 74 75 78
')' (41) 41 42 45 46 56 57 58 59 60 61 62 63 71 72 73 74 75 78
'*' (42) 73
'+' (43) 71
',' (44) 35 44 48
'-' (45) 72
'/' (47) 74
';' (59) 3 4 5 7 8 13 14 15 16 17 19 23 24 25 26 27
'<' (60) 58
'=' (61) 4 14 24 37 40
'>' (62) 59
'[' (91) 34 35 39 68
']' (93) 34 35 39 68
'{' (123) 32 50 51 54
'}' (125) 32 50 51 54
error (256)
SE (258) 49
SENAO (259) 50
ENQ (260) 52
VAR (261) 4 14 24 30 31 33 34 35 37 39 47 48 65 68
TIPO (262) 31 33 34 35 37 47 48
NUM (263) 34 35 55 66
FLOAT (264) 67
EQ (265) 56
NEQ (266) 57
LEQ (267) 60
GEQ (268) 61
E (269) 62
OU (270) 63
STR (271) 70
COM (272) 9 18 28
RETURN (273) 19
COS (274) 76
SIN (275) 77


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
ProgG (39)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0 1 2 3 4 5 6 7 8 9
ProgF (40)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 11 12 13 14 15
    16 17 18 19 32
Prog (41)
    on left: 21 22 23 24 25 26 27 28 29, on right: 21 22 23 24 25 26
    27 28 50 51 54
Funcao (42)
    on left: 30, on right: 7 16 26 69
CriaFun (43)
    on left: 31 32, on right: 6
Atrib (44)
    on left: 33 34 35 36, on right: 3 13 23
Igual (45)
    on left: 37 38, on right: 36 38
IgualL (46)
    on left: 39 40, on right: 5 15 25 40
Lexpr (47)
    on left: 41 42, on right: 30
Eexpr (48)
    on left: 43 44, on right: 42 44
Ltipo (49)
    on left: 45 46, on right: 32
Etipo (50)
    on left: 47 48, on right: 46 48
Se (51)
    on left: 49 50 51, on right: 1 11 21 50 51
Enq (52)
    on left: 52 53 54, on right: 2 12 22 53 54
Cond (53)
    on left: 55 56 57 58 59 60 61 62 63 64, on right: 49 53 62 63 64
Sexpr (54)
    on left: 65 66 67 68 69 70, on right: 79
Expr (55)
    on left: 71 72 73 74 75 76 77 78 79, on right: 4 14 19 24 38 39
    40 43 44 56 57 58 59 60 61 68 71 72 73 74 75 76 77 78


State 0

    0 $accept: . ProgG $end

    $default  reduce using rule 10 (ProgG)

    ProgG  go to state 1


State 1

    0 $accept: ProgG . $end
    1 ProgG: ProgG . Se
    2      | ProgG . Enq
    3      | ProgG . Atrib ';'
    4      | ProgG . VAR '=' Expr ';'
    5      | ProgG . IgualL ';'
    6      | ProgG . CriaFun
    7      | ProgG . Funcao ';'
    8      | ProgG . ';'
    9      | ProgG . COM

    $end  shift, and go to state 2
    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 5
    TIPO  shift, and go to state 6
    COM   shift, and go to state 7
    ';'   shift, and go to state 8
    ')'   shift, and go to state 9

    Funcao   go to state 10
    CriaFun  go to state 11
    Atrib    go to state 12
    Igual    go to state 13
    IgualL   go to state 14
    Ltipo    go to state 15
    Etipo    go to state 16
    Se       go to state 17
    Enq      go to state 18


State 2

    0 $accept: ProgG $end .

    $default  accept


State 3

   49 Se: SE . Cond

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '!'  shift, and go to state 21

    Cond  go to state 22


State 4

   52 Enq: ENQ .

    $default  reduce using rule 52 (Enq)


State 5

    4 ProgG: ProgG VAR . '=' Expr ';'
   30 Funcao: VAR . Lexpr
   39 IgualL: VAR . '[' Expr ']'

    '='  shift, and go to state 23
    '('  shift, and go to state 24
    '['  shift, and go to state 25

    Lexpr  go to state 26


State 6

   31 CriaFun: TIPO . VAR '('
   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' NUM ']'
   35      | TIPO . VAR '[' NUM ',' NUM ']'
   37 Igual: TIPO . VAR '='
   47 Etipo: TIPO . VAR

    VAR  shift, and go to state 27


State 7

    9 ProgG: ProgG COM .

    $default  reduce using rule 9 (ProgG)


State 8

    8 ProgG: ProgG ';' .

    $default  reduce using rule 8 (ProgG)


State 9

   45 Ltipo: ')' .

    $default  reduce using rule 45 (Ltipo)


State 10

    7 ProgG: ProgG Funcao . ';'

    ';'  shift, and go to state 28


State 11

    6 ProgG: ProgG CriaFun .

    $default  reduce using rule 6 (ProgG)


State 12

    3 ProgG: ProgG Atrib . ';'

    ';'  shift, and go to state 29


State 13

   36 Atrib: Igual .
   38 Igual: Igual . Expr

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    $default  reduce using rule 36 (Atrib)

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 39


State 14

    5 ProgG: ProgG IgualL . ';'
   40 IgualL: IgualL . '=' Expr

    ';'  shift, and go to state 40
    '='  shift, and go to state 41


State 15

   32 CriaFun: Ltipo . '{' ProgF '}'

    '{'  shift, and go to state 42


State 16

   46 Ltipo: Etipo . ')'
   48 Etipo: Etipo . ',' TIPO VAR

    ','  shift, and go to state 43
    ')'  shift, and go to state 44


State 17

    1 ProgG: ProgG Se .
   50 Se: Se . '{' Prog '}' SENAO
   51   | Se . '{' Prog '}'

    '{'  shift, and go to state 45

    $default  reduce using rule 1 (ProgG)


State 18

    2 ProgG: ProgG Enq .
   53 Enq: Enq . Cond
   54    | Enq . '{' Prog '}'

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '{'  shift, and go to state 46
    '!'  shift, and go to state 21

    $default  reduce using rule 2 (ProgG)

    Cond  go to state 47


State 19

   55 Cond: NUM .

    $default  reduce using rule 55 (Cond)


State 20

   56 Cond: '(' . Expr EQ Expr ')'
   57     | '(' . Expr NEQ Expr ')'
   58     | '(' . Expr '<' Expr ')'
   59     | '(' . Expr '>' Expr ')'
   60     | '(' . Expr LEQ Expr ')'
   61     | '(' . Expr GEQ Expr ')'
   62     | '(' . Cond E Cond ')'
   63     | '(' . Cond OU Cond ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 48
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 49
    '!'    shift, and go to state 21

    Funcao  go to state 37
    Cond    go to state 50
    Sexpr   go to state 38
    Expr    go to state 51


State 21

   64 Cond: '!' . Cond

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '!'  shift, and go to state 21

    Cond  go to state 52


State 22

   49 Se: SE Cond .

    $default  reduce using rule 49 (Se)


State 23

    4 ProgG: ProgG VAR '=' . Expr ';'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 53


State 24

   41 Lexpr: '(' . ')'
   42      | '(' . Eexpr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36
    ')'    shift, and go to state 54

    Funcao  go to state 37
    Eexpr   go to state 55
    Sexpr   go to state 38
    Expr    go to state 56


State 25

   39 IgualL: VAR '[' . Expr ']'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 57


State 26

   30 Funcao: VAR Lexpr .

    $default  reduce using rule 30 (Funcao)


State 27

   31 CriaFun: TIPO VAR . '('
   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' NUM ']'
   35      | TIPO VAR . '[' NUM ',' NUM ']'
   37 Igual: TIPO VAR . '='
   47 Etipo: TIPO VAR .

    '='  shift, and go to state 58
    '('  shift, and go to state 59
    '['  shift, and go to state 60

    ';'       reduce using rule 33 (Atrib)
    $default  reduce using rule 47 (Etipo)


State 28

    7 ProgG: ProgG Funcao ';' .

    $default  reduce using rule 7 (ProgG)


State 29

    3 ProgG: ProgG Atrib ';' .

    $default  reduce using rule 3 (ProgG)


State 30

   30 Funcao: VAR . Lexpr
   65 Sexpr: VAR .
   68      | VAR . '[' Expr ']'

    '('  shift, and go to state 24
    '['  shift, and go to state 61

    '('       [reduce using rule 65 (Sexpr)]
    $default  reduce using rule 65 (Sexpr)

    Lexpr  go to state 26


State 31

   66 Sexpr: NUM .

    $default  reduce using rule 66 (Sexpr)


State 32

   67 Sexpr: FLOAT .

    $default  reduce using rule 67 (Sexpr)


State 33

   70 Sexpr: STR .

    $default  reduce using rule 70 (Sexpr)


State 34

   76 Expr: COS . Expr

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 62


State 35

   77 Expr: SIN . Expr

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 63


State 36

   71 Expr: '(' . Expr '+' Expr ')'
   72     | '(' . Expr '-' Expr ')'
   73     | '(' . Expr '*' Expr ')'
   74     | '(' . Expr '/' Expr ')'
   75     | '(' . Expr '%' Expr ')'
   78     | '(' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 64


State 37

   69 Sexpr: Funcao .

    $default  reduce using rule 69 (Sexpr)


State 38

   79 Expr: Sexpr .

    $default  reduce using rule 79 (Expr)


State 39

   38 Igual: Igual Expr .

    $default  reduce using rule 38 (Igual)


State 40

    5 ProgG: ProgG IgualL ';' .

    $default  reduce using rule 5 (ProgG)


State 41

   40 IgualL: IgualL '=' . Expr

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 65


State 42

   32 CriaFun: Ltipo '{' . ProgF '}'

    $default  reduce using rule 20 (ProgF)

    ProgF  go to state 66


State 43

   48 Etipo: Etipo ',' . TIPO VAR

    TIPO  shift, and go to state 67


State 44

   46 Ltipo: Etipo ')' .

    $default  reduce using rule 46 (Ltipo)


State 45

   50 Se: Se '{' . Prog '}' SENAO
   51   | Se '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 68


State 46

   54 Enq: Enq '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 69


State 47

   53 Enq: Enq Cond .

    $default  reduce using rule 53 (Enq)


State 48

   55 Cond: NUM .
   66 Sexpr: NUM .

    E         reduce using rule 55 (Cond)
    OU        reduce using rule 55 (Cond)
    $default  reduce using rule 66 (Sexpr)


State 49

   56 Cond: '(' . Expr EQ Expr ')'
   57     | '(' . Expr NEQ Expr ')'
   58     | '(' . Expr '<' Expr ')'
   59     | '(' . Expr '>' Expr ')'
   60     | '(' . Expr LEQ Expr ')'
   61     | '(' . Expr GEQ Expr ')'
   62     | '(' . Cond E Cond ')'
   63     | '(' . Cond OU Cond ')'
   71 Expr: '(' . Expr '+' Expr ')'
   72     | '(' . Expr '-' Expr ')'
   73     | '(' . Expr '*' Expr ')'
   74     | '(' . Expr '/' Expr ')'
   75     | '(' . Expr '%' Expr ')'
   78     | '(' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 48
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 49
    '!'    shift, and go to state 21

    Funcao  go to state 37
    Cond    go to state 50
    Sexpr   go to state 38
    Expr    go to state 70


State 50

   62 Cond: '(' Cond . E Cond ')'
   63     | '(' Cond . OU Cond ')'

    E   shift, and go to state 71
    OU  shift, and go to state 72


State 51

   56 Cond: '(' Expr . EQ Expr ')'
   57     | '(' Expr . NEQ Expr ')'
   58     | '(' Expr . '<' Expr ')'
   59     | '(' Expr . '>' Expr ')'
   60     | '(' Expr . LEQ Expr ')'
   61     | '(' Expr . GEQ Expr ')'

    EQ   shift, and go to state 73
    NEQ  shift, and go to state 74
    LEQ  shift, and go to state 75
    GEQ  shift, and go to state 76
    '<'  shift, and go to state 77
    '>'  shift, and go to state 78


State 52

   64 Cond: '!' Cond .

    $default  reduce using rule 64 (Cond)


State 53

    4 ProgG: ProgG VAR '=' Expr . ';'

    ';'  shift, and go to state 79


State 54

   41 Lexpr: '(' ')' .

    $default  reduce using rule 41 (Lexpr)


State 55

   42 Lexpr: '(' Eexpr . ')'
   44 Eexpr: Eexpr . ',' Expr

    ','  shift, and go to state 80
    ')'  shift, and go to state 81


State 56

   43 Eexpr: Expr .

    $default  reduce using rule 43 (Eexpr)


State 57

   39 IgualL: VAR '[' Expr . ']'

    ']'  shift, and go to state 82


State 58

   37 Igual: TIPO VAR '=' .

    $default  reduce using rule 37 (Igual)


State 59

   31 CriaFun: TIPO VAR '(' .

    $default  reduce using rule 31 (CriaFun)


State 60

   34 Atrib: TIPO VAR '[' . NUM ']'
   35      | TIPO VAR '[' . NUM ',' NUM ']'

    NUM  shift, and go to state 83


State 61

   68 Sexpr: VAR '[' . Expr ']'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 84


State 62

   76 Expr: COS Expr .

    $default  reduce using rule 76 (Expr)


State 63

   77 Expr: SIN Expr .

    $default  reduce using rule 77 (Expr)


State 64

   71 Expr: '(' Expr . '+' Expr ')'
   72     | '(' Expr . '-' Expr ')'
   73     | '(' Expr . '*' Expr ')'
   74     | '(' Expr . '/' Expr ')'
   75     | '(' Expr . '%' Expr ')'
   78     | '(' Expr . ')'

    ')'  shift, and go to state 85
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90


State 65

   40 IgualL: IgualL '=' Expr .

    $default  reduce using rule 40 (IgualL)


State 66

   11 ProgF: ProgF . Se
   12      | ProgF . Enq
   13      | ProgF . Atrib ';'
   14      | ProgF . VAR '=' Expr ';'
   15      | ProgF . IgualL ';'
   16      | ProgF . Funcao ';'
   17      | ProgF . ';'
   18      | ProgF . COM
   19      | ProgF . RETURN Expr ';'
   32 CriaFun: Ltipo '{' ProgF . '}'

    SE      shift, and go to state 3
    ENQ     shift, and go to state 4
    VAR     shift, and go to state 91
    TIPO    shift, and go to state 92
    COM     shift, and go to state 93
    RETURN  shift, and go to state 94
    ';'     shift, and go to state 95
    '}'     shift, and go to state 96

    Funcao  go to state 97
    Atrib   go to state 98
    Igual   go to state 13
    IgualL  go to state 99
    Se      go to state 100
    Enq     go to state 101


State 67

   48 Etipo: Etipo ',' TIPO . VAR

    VAR  shift, and go to state 102


State 68

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . IgualL ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   50 Se: Se '{' Prog . '}' SENAO
   51   | Se '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 103
    TIPO  shift, and go to state 92
    COM   shift, and go to state 104
    ';'   shift, and go to state 105
    '}'   shift, and go to state 106

    Funcao  go to state 107
    Atrib   go to state 108
    Igual   go to state 13
    IgualL  go to state 109
    Se      go to state 110
    Enq     go to state 111


State 69

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . IgualL ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   54 Enq: Enq '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 103
    TIPO  shift, and go to state 92
    COM   shift, and go to state 104
    ';'   shift, and go to state 105
    '}'   shift, and go to state 112

    Funcao  go to state 107
    Atrib   go to state 108
    Igual   go to state 13
    IgualL  go to state 109
    Se      go to state 110
    Enq     go to state 111


State 70

   56 Cond: '(' Expr . EQ Expr ')'
   57     | '(' Expr . NEQ Expr ')'
   58     | '(' Expr . '<' Expr ')'
   59     | '(' Expr . '>' Expr ')'
   60     | '(' Expr . LEQ Expr ')'
   61     | '(' Expr . GEQ Expr ')'
   71 Expr: '(' Expr . '+' Expr ')'
   72     | '(' Expr . '-' Expr ')'
   73     | '(' Expr . '*' Expr ')'
   74     | '(' Expr . '/' Expr ')'
   75     | '(' Expr . '%' Expr ')'
   78     | '(' Expr . ')'

    EQ   shift, and go to state 73
    NEQ  shift, and go to state 74
    LEQ  shift, and go to state 75
    GEQ  shift, and go to state 76
    ')'  shift, and go to state 85
    '<'  shift, and go to state 77
    '>'  shift, and go to state 78
    '+'  shift, and go to state 86
    '-'  shift, and go to state 87
    '*'  shift, and go to state 88
    '/'  shift, and go to state 89
    '%'  shift, and go to state 90


State 71

   62 Cond: '(' Cond E . Cond ')'

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '!'  shift, and go to state 21

    Cond  go to state 113


State 72

   63 Cond: '(' Cond OU . Cond ')'

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '!'  shift, and go to state 21

    Cond  go to state 114


State 73

   56 Cond: '(' Expr EQ . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 115


State 74

   57 Cond: '(' Expr NEQ . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 116


State 75

   60 Cond: '(' Expr LEQ . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 117


State 76

   61 Cond: '(' Expr GEQ . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 118


State 77

   58 Cond: '(' Expr '<' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 119


State 78

   59 Cond: '(' Expr '>' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 120


State 79

    4 ProgG: ProgG VAR '=' Expr ';' .

    $default  reduce using rule 4 (ProgG)


State 80

   44 Eexpr: Eexpr ',' . Expr

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 121


State 81

   42 Lexpr: '(' Eexpr ')' .

    $default  reduce using rule 42 (Lexpr)


State 82

   39 IgualL: VAR '[' Expr ']' .

    $default  reduce using rule 39 (IgualL)


State 83

   34 Atrib: TIPO VAR '[' NUM . ']'
   35      | TIPO VAR '[' NUM . ',' NUM ']'

    ']'  shift, and go to state 122
    ','  shift, and go to state 123


State 84

   68 Sexpr: VAR '[' Expr . ']'

    ']'  shift, and go to state 124


State 85

   78 Expr: '(' Expr ')' .

    $default  reduce using rule 78 (Expr)


State 86

   71 Expr: '(' Expr '+' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 125


State 87

   72 Expr: '(' Expr '-' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 126


State 88

   73 Expr: '(' Expr '*' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 127


State 89

   74 Expr: '(' Expr '/' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 128


State 90

   75 Expr: '(' Expr '%' . Expr ')'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 129


State 91

   14 ProgF: ProgF VAR . '=' Expr ';'
   30 Funcao: VAR . Lexpr
   39 IgualL: VAR . '[' Expr ']'

    '='  shift, and go to state 130
    '('  shift, and go to state 24
    '['  shift, and go to state 25

    Lexpr  go to state 26


State 92

   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' NUM ']'
   35      | TIPO . VAR '[' NUM ',' NUM ']'
   37 Igual: TIPO . VAR '='

    VAR  shift, and go to state 131


State 93

   18 ProgF: ProgF COM .

    $default  reduce using rule 18 (ProgF)


State 94

   19 ProgF: ProgF RETURN . Expr ';'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 132


State 95

   17 ProgF: ProgF ';' .

    $default  reduce using rule 17 (ProgF)


State 96

   32 CriaFun: Ltipo '{' ProgF '}' .

    $default  reduce using rule 32 (CriaFun)


State 97

   16 ProgF: ProgF Funcao . ';'

    ';'  shift, and go to state 133


State 98

   13 ProgF: ProgF Atrib . ';'

    ';'  shift, and go to state 134


State 99

   15 ProgF: ProgF IgualL . ';'
   40 IgualL: IgualL . '=' Expr

    ';'  shift, and go to state 135
    '='  shift, and go to state 41


State 100

   11 ProgF: ProgF Se .
   50 Se: Se . '{' Prog '}' SENAO
   51   | Se . '{' Prog '}'

    '{'  shift, and go to state 45

    $default  reduce using rule 11 (ProgF)


State 101

   12 ProgF: ProgF Enq .
   53 Enq: Enq . Cond
   54    | Enq . '{' Prog '}'

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '{'  shift, and go to state 46
    '!'  shift, and go to state 21

    $default  reduce using rule 12 (ProgF)

    Cond  go to state 47


State 102

   48 Etipo: Etipo ',' TIPO VAR .

    $default  reduce using rule 48 (Etipo)


State 103

   24 Prog: Prog VAR . '=' Expr ';'
   30 Funcao: VAR . Lexpr
   39 IgualL: VAR . '[' Expr ']'

    '='  shift, and go to state 136
    '('  shift, and go to state 24
    '['  shift, and go to state 25

    Lexpr  go to state 26


State 104

   28 Prog: Prog COM .

    $default  reduce using rule 28 (Prog)


State 105

   27 Prog: Prog ';' .

    $default  reduce using rule 27 (Prog)


State 106

   50 Se: Se '{' Prog '}' . SENAO
   51   | Se '{' Prog '}' .

    SENAO  shift, and go to state 137

    $default  reduce using rule 51 (Se)


State 107

   26 Prog: Prog Funcao . ';'

    ';'  shift, and go to state 138


State 108

   23 Prog: Prog Atrib . ';'

    ';'  shift, and go to state 139


State 109

   25 Prog: Prog IgualL . ';'
   40 IgualL: IgualL . '=' Expr

    ';'  shift, and go to state 140
    '='  shift, and go to state 41


State 110

   21 Prog: Prog Se .
   50 Se: Se . '{' Prog '}' SENAO
   51   | Se . '{' Prog '}'

    '{'  shift, and go to state 45

    $default  reduce using rule 21 (Prog)


State 111

   22 Prog: Prog Enq .
   53 Enq: Enq . Cond
   54    | Enq . '{' Prog '}'

    NUM  shift, and go to state 19
    '('  shift, and go to state 20
    '{'  shift, and go to state 46
    '!'  shift, and go to state 21

    $default  reduce using rule 22 (Prog)

    Cond  go to state 47


State 112

   54 Enq: Enq '{' Prog '}' .

    $default  reduce using rule 54 (Enq)


State 113

   62 Cond: '(' Cond E Cond . ')'

    ')'  shift, and go to state 141


State 114

   63 Cond: '(' Cond OU Cond . ')'

    ')'  shift, and go to state 142


State 115

   56 Cond: '(' Expr EQ Expr . ')'

    ')'  shift, and go to state 143


State 116

   57 Cond: '(' Expr NEQ Expr . ')'

    ')'  shift, and go to state 144


State 117

   60 Cond: '(' Expr LEQ Expr . ')'

    ')'  shift, and go to state 145


State 118

   61 Cond: '(' Expr GEQ Expr . ')'

    ')'  shift, and go to state 146


State 119

   58 Cond: '(' Expr '<' Expr . ')'

    ')'  shift, and go to state 147


State 120

   59 Cond: '(' Expr '>' Expr . ')'

    ')'  shift, and go to state 148


State 121

   44 Eexpr: Eexpr ',' Expr .

    $default  reduce using rule 44 (Eexpr)


State 122

   34 Atrib: TIPO VAR '[' NUM ']' .

    $default  reduce using rule 34 (Atrib)


State 123

   35 Atrib: TIPO VAR '[' NUM ',' . NUM ']'

    NUM  shift, and go to state 149


State 124

   68 Sexpr: VAR '[' Expr ']' .

    $default  reduce using rule 68 (Sexpr)


State 125

   71 Expr: '(' Expr '+' Expr . ')'

    ')'  shift, and go to state 150


State 126

   72 Expr: '(' Expr '-' Expr . ')'

    ')'  shift, and go to state 151


State 127

   73 Expr: '(' Expr '*' Expr . ')'

    ')'  shift, and go to state 152


State 128

   74 Expr: '(' Expr '/' Expr . ')'

    ')'  shift, and go to state 153


State 129

   75 Expr: '(' Expr '%' Expr . ')'

    ')'  shift, and go to state 154


State 130

   14 ProgF: ProgF VAR '=' . Expr ';'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 155


State 131

   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' NUM ']'
   35      | TIPO VAR . '[' NUM ',' NUM ']'
   37 Igual: TIPO VAR . '='

    '='  shift, and go to state 58
    '['  shift, and go to state 60

    $default  reduce using rule 33 (Atrib)


State 132

   19 ProgF: ProgF RETURN Expr . ';'

    ';'  shift, and go to state 156


State 133

   16 ProgF: ProgF Funcao ';' .

    $default  reduce using rule 16 (ProgF)


State 134

   13 ProgF: ProgF Atrib ';' .

    $default  reduce using rule 13 (ProgF)


State 135

   15 ProgF: ProgF IgualL ';' .

    $default  reduce using rule 15 (ProgF)


State 136

   24 Prog: Prog VAR '=' . Expr ';'

    VAR    shift, and go to state 30
    NUM    shift, and go to state 31
    FLOAT  shift, and go to state 32
    STR    shift, and go to state 33
    COS    shift, and go to state 34
    SIN    shift, and go to state 35
    '('    shift, and go to state 36

    Funcao  go to state 37
    Sexpr   go to state 38
    Expr    go to state 157


State 137

   50 Se: Se '{' Prog '}' SENAO .

    $default  reduce using rule 50 (Se)


State 138

   26 Prog: Prog Funcao ';' .

    $default  reduce using rule 26 (Prog)


State 139

   23 Prog: Prog Atrib ';' .

    $default  reduce using rule 23 (Prog)


State 140

   25 Prog: Prog IgualL ';' .

    $default  reduce using rule 25 (Prog)


State 141

   62 Cond: '(' Cond E Cond ')' .

    $default  reduce using rule 62 (Cond)


State 142

   63 Cond: '(' Cond OU Cond ')' .

    $default  reduce using rule 63 (Cond)


State 143

   56 Cond: '(' Expr EQ Expr ')' .

    $default  reduce using rule 56 (Cond)


State 144

   57 Cond: '(' Expr NEQ Expr ')' .

    $default  reduce using rule 57 (Cond)


State 145

   60 Cond: '(' Expr LEQ Expr ')' .

    $default  reduce using rule 60 (Cond)


State 146

   61 Cond: '(' Expr GEQ Expr ')' .

    $default  reduce using rule 61 (Cond)


State 147

   58 Cond: '(' Expr '<' Expr ')' .

    $default  reduce using rule 58 (Cond)


State 148

   59 Cond: '(' Expr '>' Expr ')' .

    $default  reduce using rule 59 (Cond)


State 149

   35 Atrib: TIPO VAR '[' NUM ',' NUM . ']'

    ']'  shift, and go to state 158


State 150

   71 Expr: '(' Expr '+' Expr ')' .

    $default  reduce using rule 71 (Expr)


State 151

   72 Expr: '(' Expr '-' Expr ')' .

    $default  reduce using rule 72 (Expr)


State 152

   73 Expr: '(' Expr '*' Expr ')' .

    $default  reduce using rule 73 (Expr)


State 153

   74 Expr: '(' Expr '/' Expr ')' .

    $default  reduce using rule 74 (Expr)


State 154

   75 Expr: '(' Expr '%' Expr ')' .

    $default  reduce using rule 75 (Expr)


State 155

   14 ProgF: ProgF VAR '=' Expr . ';'

    ';'  shift, and go to state 159


State 156

   19 ProgF: ProgF RETURN Expr ';' .

    $default  reduce using rule 19 (ProgF)


State 157

   24 Prog: Prog VAR '=' Expr . ';'

    ';'  shift, and go to state 160


State 158

   35 Atrib: TIPO VAR '[' NUM ',' NUM ']' .

    $default  reduce using rule 35 (Atrib)


State 159

   14 ProgF: ProgF VAR '=' Expr ';' .

    $default  reduce using rule 14 (ProgF)


State 160

   24 Prog: Prog VAR '=' Expr ';' .

    $default  reduce using rule 24 (Prog)
