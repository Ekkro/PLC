State 29 conflicts: 1 shift/reduce


Grammar

    0 $accept: ProgG $end

    1 ProgG: ProgG Se
    2      | ProgG Enq
    3      | ProgG Atrib ';'
    4      | ProgG VAR '=' Expr ';'
    5      | ProgG VAR '[' NUM ']' '=' Expr ';'
    6      | ProgG CriaFun
    7      | ProgG Funcao ';'
    8      | ProgG ';'
    9      | ProgG COM
   10      | %empty

   11 ProgF: ProgF Se
   12      | ProgF Enq
   13      | ProgF Atrib ';'
   14      | ProgF VAR '=' Expr ';'
   15      | ProgF VAR '[' NUM ']' '=' Expr ';'
   16      | ProgF Funcao ';'
   17      | ProgF ';'
   18      | ProgF COM
   19      | ProgF RETURN Expr ';'
   20      | %empty

   21 Prog: Prog Se
   22     | Prog Enq
   23     | Prog Atrib ';'
   24     | Prog VAR '=' Expr ';'
   25     | Prog VAR '[' NUM ']' '=' Expr ';'
   26     | Prog Funcao ';'
   27     | Prog ';'
   28     | Prog COM
   29     | %empty

   30 Funcao: VAR Lexpr

   31 CriaFun: TIPO VAR '('
   32        | Ltipo '{' ProgF '}'

   33 Atrib: TIPO VAR
   34      | TIPO VAR '[' NUM ']'
   35      | Igual

   36 Igual: TIPO VAR '='
   37      | Igual Expr

   38 Lexpr: '(' ')'
   39      | '(' Eexpr ')'

   40 Eexpr: Expr
   41      | Eexpr ',' Expr

   42 Ltipo: ')'
   43      | Etipo ')'

   44 Etipo: TIPO VAR
   45      | Etipo ',' TIPO VAR

   46 Se: SE Cond
   47   | Se '{' Prog '}' CASO Cond
   48   | Se '{' Prog '}' SENAO
   49   | Se '{' Prog '}'

   50 Enq: ENQ
   51    | Enq Cond
   52    | Enq '{' Prog '}'

   53 Cond: NUM
   54     | '(' Expr EQ Expr ')'
   55     | '(' Expr NEQ Expr ')'
   56     | '(' Expr '<' Expr ')'
   57     | '(' Expr '>' Expr ')'
   58     | '(' Expr LEQ Expr ')'
   59     | '(' Expr GEQ Expr ')'
   60     | '(' Cond E Cond ')'
   61     | '(' Cond OU Cond ')'
   62     | '!' Cond

   63 Sexpr: VAR
   64      | NUM
   65      | FLOAT
   66      | VAR '[' Expr ']'
   67      | Funcao
   68      | STR

   69 Expr: '(' Expr '+' Expr ')'
   70     | '(' Expr '-' Expr ')'
   71     | '(' Expr '*' Expr ')'
   72     | '(' Expr '/' Expr ')'
   73     | '(' Expr '%' Expr ')'
   74     | '(' Expr ')'
   75     | Sexpr


Terminals, with rules where they appear

$end (0) 0
'!' (33) 62
'%' (37) 73
'(' (40) 31 38 39 54 55 56 57 58 59 60 61 69 70 71 72 73 74
')' (41) 38 39 42 43 54 55 56 57 58 59 60 61 69 70 71 72 73 74
'*' (42) 71
'+' (43) 69
',' (44) 41 45
'-' (45) 70
'/' (47) 72
';' (59) 3 4 5 7 8 13 14 15 16 17 19 23 24 25 26 27
'<' (60) 56
'=' (61) 4 5 14 15 24 25 36
'>' (62) 57
'[' (91) 5 15 25 34 66
']' (93) 5 15 25 34 66
'{' (123) 32 47 48 49 52
'}' (125) 32 47 48 49 52
error (256)
SE (258) 46
SENAO (259) 48
CASO (260) 47
ENQ (261) 50
VAR (262) 4 5 14 15 24 25 30 31 33 34 36 44 45 63 66
TIPO (263) 31 33 34 36 44 45
NUM (264) 5 15 25 34 53 64
FLOAT (265) 65
EQ (266) 54
NEQ (267) 55
LEQ (268) 58
GEQ (269) 59
E (270) 60
OU (271) 61
STR (272) 68
COM (273) 9 18 28
RETURN (274) 19


Nonterminals, with rules where they appear

$accept (37)
    on left: 0
ProgG (38)
    on left: 1 2 3 4 5 6 7 8 9 10, on right: 0 1 2 3 4 5 6 7 8 9
ProgF (39)
    on left: 11 12 13 14 15 16 17 18 19 20, on right: 11 12 13 14 15
    16 17 18 19 32
Prog (40)
    on left: 21 22 23 24 25 26 27 28 29, on right: 21 22 23 24 25 26
    27 28 47 48 49 52
Funcao (41)
    on left: 30, on right: 7 16 26 67
CriaFun (42)
    on left: 31 32, on right: 6
Atrib (43)
    on left: 33 34 35, on right: 3 13 23
Igual (44)
    on left: 36 37, on right: 35 37
Lexpr (45)
    on left: 38 39, on right: 30
Eexpr (46)
    on left: 40 41, on right: 39 41
Ltipo (47)
    on left: 42 43, on right: 32
Etipo (48)
    on left: 44 45, on right: 43 45
Se (49)
    on left: 46 47 48 49, on right: 1 11 21 47 48 49
Enq (50)
    on left: 50 51 52, on right: 2 12 22 51 52
Cond (51)
    on left: 53 54 55 56 57 58 59 60 61 62, on right: 46 47 51 60 61
    62
Sexpr (52)
    on left: 63 64 65 66 67 68, on right: 75
Expr (53)
    on left: 69 70 71 72 73 74 75, on right: 4 5 14 15 19 24 25 37
    40 41 54 55 56 57 58 59 66 69 70 71 72 73 74


State 0

    0 $accept: . ProgG $end

    $default  reduce using rule 10 (ProgG)

    ProgG  go to state 1


State 1

    0 $accept: ProgG . $end
    1 ProgG: ProgG . Se
    2      | ProgG . Enq
    3      | ProgG . Atrib ';'
    4      | ProgG . VAR '=' Expr ';'
    5      | ProgG . VAR '[' NUM ']' '=' Expr ';'
    6      | ProgG . CriaFun
    7      | ProgG . Funcao ';'
    8      | ProgG . ';'
    9      | ProgG . COM

    $end  shift, and go to state 2
    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 5
    TIPO  shift, and go to state 6
    COM   shift, and go to state 7
    ';'   shift, and go to state 8
    ')'   shift, and go to state 9

    Funcao   go to state 10
    CriaFun  go to state 11
    Atrib    go to state 12
    Igual    go to state 13
    Ltipo    go to state 14
    Etipo    go to state 15
    Se       go to state 16
    Enq      go to state 17


State 2

    0 $accept: ProgG $end .

    $default  accept


State 3

   46 Se: SE . Cond

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 21


State 4

   50 Enq: ENQ .

    $default  reduce using rule 50 (Enq)


State 5

    4 ProgG: ProgG VAR . '=' Expr ';'
    5      | ProgG VAR . '[' NUM ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 22
    '['  shift, and go to state 23
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 6

   31 CriaFun: TIPO . VAR '('
   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' NUM ']'
   36 Igual: TIPO . VAR '='
   44 Etipo: TIPO . VAR

    VAR  shift, and go to state 26


State 7

    9 ProgG: ProgG COM .

    $default  reduce using rule 9 (ProgG)


State 8

    8 ProgG: ProgG ';' .

    $default  reduce using rule 8 (ProgG)


State 9

   42 Ltipo: ')' .

    $default  reduce using rule 42 (Ltipo)


State 10

    7 ProgG: ProgG Funcao . ';'

    ';'  shift, and go to state 27


State 11

    6 ProgG: ProgG CriaFun .

    $default  reduce using rule 6 (ProgG)


State 12

    3 ProgG: ProgG Atrib . ';'

    ';'  shift, and go to state 28


State 13

   35 Atrib: Igual .
   37 Igual: Igual . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    $default  reduce using rule 35 (Atrib)

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 36


State 14

   32 CriaFun: Ltipo . '{' ProgF '}'

    '{'  shift, and go to state 37


State 15

   43 Ltipo: Etipo . ')'
   45 Etipo: Etipo . ',' TIPO VAR

    ')'  shift, and go to state 38
    ','  shift, and go to state 39


State 16

    1 ProgG: ProgG Se .
   47 Se: Se . '{' Prog '}' CASO Cond
   48   | Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 40

    $default  reduce using rule 1 (ProgG)


State 17

    2 ProgG: ProgG Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 41
    '!'  shift, and go to state 20

    $default  reduce using rule 2 (ProgG)

    Cond  go to state 42


State 18

   53 Cond: NUM .

    $default  reduce using rule 53 (Cond)


State 19

   54 Cond: '(' . Expr EQ Expr ')'
   55     | '(' . Expr NEQ Expr ')'
   56     | '(' . Expr '<' Expr ')'
   57     | '(' . Expr '>' Expr ')'
   58     | '(' . Expr LEQ Expr ')'
   59     | '(' . Expr GEQ Expr ')'
   60     | '(' . Cond E Cond ')'
   61     | '(' . Cond OU Cond ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 43
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 44
    '!'    shift, and go to state 20

    Funcao  go to state 34
    Cond    go to state 45
    Sexpr   go to state 35
    Expr    go to state 46


State 20

   62 Cond: '!' . Cond

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 47


State 21

   46 Se: SE Cond .

    $default  reduce using rule 46 (Se)


State 22

    4 ProgG: ProgG VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 48


State 23

    5 ProgG: ProgG VAR '[' . NUM ']' '=' Expr ';'

    NUM  shift, and go to state 49


State 24

   38 Lexpr: '(' . ')'
   39      | '(' . Eexpr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33
    ')'    shift, and go to state 50

    Funcao  go to state 34
    Eexpr   go to state 51
    Sexpr   go to state 35
    Expr    go to state 52


State 25

   30 Funcao: VAR Lexpr .

    $default  reduce using rule 30 (Funcao)


State 26

   31 CriaFun: TIPO VAR . '('
   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' NUM ']'
   36 Igual: TIPO VAR . '='
   44 Etipo: TIPO VAR .

    '='  shift, and go to state 53
    '['  shift, and go to state 54
    '('  shift, and go to state 55

    ';'       reduce using rule 33 (Atrib)
    $default  reduce using rule 44 (Etipo)


State 27

    7 ProgG: ProgG Funcao ';' .

    $default  reduce using rule 7 (ProgG)


State 28

    3 ProgG: ProgG Atrib ';' .

    $default  reduce using rule 3 (ProgG)


State 29

   30 Funcao: VAR . Lexpr
   63 Sexpr: VAR .
   66      | VAR . '[' Expr ']'

    '['  shift, and go to state 56
    '('  shift, and go to state 24

    '('       [reduce using rule 63 (Sexpr)]
    $default  reduce using rule 63 (Sexpr)

    Lexpr  go to state 25


State 30

   64 Sexpr: NUM .

    $default  reduce using rule 64 (Sexpr)


State 31

   65 Sexpr: FLOAT .

    $default  reduce using rule 65 (Sexpr)


State 32

   68 Sexpr: STR .

    $default  reduce using rule 68 (Sexpr)


State 33

   69 Expr: '(' . Expr '+' Expr ')'
   70     | '(' . Expr '-' Expr ')'
   71     | '(' . Expr '*' Expr ')'
   72     | '(' . Expr '/' Expr ')'
   73     | '(' . Expr '%' Expr ')'
   74     | '(' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 57


State 34

   67 Sexpr: Funcao .

    $default  reduce using rule 67 (Sexpr)


State 35

   75 Expr: Sexpr .

    $default  reduce using rule 75 (Expr)


State 36

   37 Igual: Igual Expr .

    $default  reduce using rule 37 (Igual)


State 37

   32 CriaFun: Ltipo '{' . ProgF '}'

    $default  reduce using rule 20 (ProgF)

    ProgF  go to state 58


State 38

   43 Ltipo: Etipo ')' .

    $default  reduce using rule 43 (Ltipo)


State 39

   45 Etipo: Etipo ',' . TIPO VAR

    TIPO  shift, and go to state 59


State 40

   47 Se: Se '{' . Prog '}' CASO Cond
   48   | Se '{' . Prog '}' SENAO
   49   | Se '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 60


State 41

   52 Enq: Enq '{' . Prog '}'

    $default  reduce using rule 29 (Prog)

    Prog  go to state 61


State 42

   51 Enq: Enq Cond .

    $default  reduce using rule 51 (Enq)


State 43

   53 Cond: NUM .
   64 Sexpr: NUM .

    E         reduce using rule 53 (Cond)
    OU        reduce using rule 53 (Cond)
    $default  reduce using rule 64 (Sexpr)


State 44

   54 Cond: '(' . Expr EQ Expr ')'
   55     | '(' . Expr NEQ Expr ')'
   56     | '(' . Expr '<' Expr ')'
   57     | '(' . Expr '>' Expr ')'
   58     | '(' . Expr LEQ Expr ')'
   59     | '(' . Expr GEQ Expr ')'
   60     | '(' . Cond E Cond ')'
   61     | '(' . Cond OU Cond ')'
   69 Expr: '(' . Expr '+' Expr ')'
   70     | '(' . Expr '-' Expr ')'
   71     | '(' . Expr '*' Expr ')'
   72     | '(' . Expr '/' Expr ')'
   73     | '(' . Expr '%' Expr ')'
   74     | '(' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 43
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 44
    '!'    shift, and go to state 20

    Funcao  go to state 34
    Cond    go to state 45
    Sexpr   go to state 35
    Expr    go to state 62


State 45

   60 Cond: '(' Cond . E Cond ')'
   61     | '(' Cond . OU Cond ')'

    E   shift, and go to state 63
    OU  shift, and go to state 64


State 46

   54 Cond: '(' Expr . EQ Expr ')'
   55     | '(' Expr . NEQ Expr ')'
   56     | '(' Expr . '<' Expr ')'
   57     | '(' Expr . '>' Expr ')'
   58     | '(' Expr . LEQ Expr ')'
   59     | '(' Expr . GEQ Expr ')'

    EQ   shift, and go to state 65
    NEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    GEQ  shift, and go to state 68
    '<'  shift, and go to state 69
    '>'  shift, and go to state 70


State 47

   62 Cond: '!' Cond .

    $default  reduce using rule 62 (Cond)


State 48

    4 ProgG: ProgG VAR '=' Expr . ';'

    ';'  shift, and go to state 71


State 49

    5 ProgG: ProgG VAR '[' NUM . ']' '=' Expr ';'

    ']'  shift, and go to state 72


State 50

   38 Lexpr: '(' ')' .

    $default  reduce using rule 38 (Lexpr)


State 51

   39 Lexpr: '(' Eexpr . ')'
   41 Eexpr: Eexpr . ',' Expr

    ')'  shift, and go to state 73
    ','  shift, and go to state 74


State 52

   40 Eexpr: Expr .

    $default  reduce using rule 40 (Eexpr)


State 53

   36 Igual: TIPO VAR '=' .

    $default  reduce using rule 36 (Igual)


State 54

   34 Atrib: TIPO VAR '[' . NUM ']'

    NUM  shift, and go to state 75


State 55

   31 CriaFun: TIPO VAR '(' .

    $default  reduce using rule 31 (CriaFun)


State 56

   66 Sexpr: VAR '[' . Expr ']'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 76


State 57

   69 Expr: '(' Expr . '+' Expr ')'
   70     | '(' Expr . '-' Expr ')'
   71     | '(' Expr . '*' Expr ')'
   72     | '(' Expr . '/' Expr ')'
   73     | '(' Expr . '%' Expr ')'
   74     | '(' Expr . ')'

    ')'  shift, and go to state 77
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82


State 58

   11 ProgF: ProgF . Se
   12      | ProgF . Enq
   13      | ProgF . Atrib ';'
   14      | ProgF . VAR '=' Expr ';'
   15      | ProgF . VAR '[' NUM ']' '=' Expr ';'
   16      | ProgF . Funcao ';'
   17      | ProgF . ';'
   18      | ProgF . COM
   19      | ProgF . RETURN Expr ';'
   32 CriaFun: Ltipo '{' ProgF . '}'

    SE      shift, and go to state 3
    ENQ     shift, and go to state 4
    VAR     shift, and go to state 83
    TIPO    shift, and go to state 84
    COM     shift, and go to state 85
    RETURN  shift, and go to state 86
    ';'     shift, and go to state 87
    '}'     shift, and go to state 88

    Funcao  go to state 89
    Atrib   go to state 90
    Igual   go to state 13
    Se      go to state 91
    Enq     go to state 92


State 59

   45 Etipo: Etipo ',' TIPO . VAR

    VAR  shift, and go to state 93


State 60

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . VAR '[' NUM ']' '=' Expr ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   47 Se: Se '{' Prog . '}' CASO Cond
   48   | Se '{' Prog . '}' SENAO
   49   | Se '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 94
    TIPO  shift, and go to state 84
    COM   shift, and go to state 95
    ';'   shift, and go to state 96
    '}'   shift, and go to state 97

    Funcao  go to state 98
    Atrib   go to state 99
    Igual   go to state 13
    Se      go to state 100
    Enq     go to state 101


State 61

   21 Prog: Prog . Se
   22     | Prog . Enq
   23     | Prog . Atrib ';'
   24     | Prog . VAR '=' Expr ';'
   25     | Prog . VAR '[' NUM ']' '=' Expr ';'
   26     | Prog . Funcao ';'
   27     | Prog . ';'
   28     | Prog . COM
   52 Enq: Enq '{' Prog . '}'

    SE    shift, and go to state 3
    ENQ   shift, and go to state 4
    VAR   shift, and go to state 94
    TIPO  shift, and go to state 84
    COM   shift, and go to state 95
    ';'   shift, and go to state 96
    '}'   shift, and go to state 102

    Funcao  go to state 98
    Atrib   go to state 99
    Igual   go to state 13
    Se      go to state 100
    Enq     go to state 101


State 62

   54 Cond: '(' Expr . EQ Expr ')'
   55     | '(' Expr . NEQ Expr ')'
   56     | '(' Expr . '<' Expr ')'
   57     | '(' Expr . '>' Expr ')'
   58     | '(' Expr . LEQ Expr ')'
   59     | '(' Expr . GEQ Expr ')'
   69 Expr: '(' Expr . '+' Expr ')'
   70     | '(' Expr . '-' Expr ')'
   71     | '(' Expr . '*' Expr ')'
   72     | '(' Expr . '/' Expr ')'
   73     | '(' Expr . '%' Expr ')'
   74     | '(' Expr . ')'

    EQ   shift, and go to state 65
    NEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    GEQ  shift, and go to state 68
    ')'  shift, and go to state 77
    '<'  shift, and go to state 69
    '>'  shift, and go to state 70
    '+'  shift, and go to state 78
    '-'  shift, and go to state 79
    '*'  shift, and go to state 80
    '/'  shift, and go to state 81
    '%'  shift, and go to state 82


State 63

   60 Cond: '(' Cond E . Cond ')'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 103


State 64

   61 Cond: '(' Cond OU . Cond ')'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 104


State 65

   54 Cond: '(' Expr EQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 105


State 66

   55 Cond: '(' Expr NEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 106


State 67

   58 Cond: '(' Expr LEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 107


State 68

   59 Cond: '(' Expr GEQ . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 108


State 69

   56 Cond: '(' Expr '<' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 109


State 70

   57 Cond: '(' Expr '>' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 110


State 71

    4 ProgG: ProgG VAR '=' Expr ';' .

    $default  reduce using rule 4 (ProgG)


State 72

    5 ProgG: ProgG VAR '[' NUM ']' . '=' Expr ';'

    '='  shift, and go to state 111


State 73

   39 Lexpr: '(' Eexpr ')' .

    $default  reduce using rule 39 (Lexpr)


State 74

   41 Eexpr: Eexpr ',' . Expr

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 112


State 75

   34 Atrib: TIPO VAR '[' NUM . ']'

    ']'  shift, and go to state 113


State 76

   66 Sexpr: VAR '[' Expr . ']'

    ']'  shift, and go to state 114


State 77

   74 Expr: '(' Expr ')' .

    $default  reduce using rule 74 (Expr)


State 78

   69 Expr: '(' Expr '+' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 115


State 79

   70 Expr: '(' Expr '-' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 116


State 80

   71 Expr: '(' Expr '*' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 117


State 81

   72 Expr: '(' Expr '/' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 118


State 82

   73 Expr: '(' Expr '%' . Expr ')'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 119


State 83

   14 ProgF: ProgF VAR . '=' Expr ';'
   15      | ProgF VAR . '[' NUM ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 120
    '['  shift, and go to state 121
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 84

   33 Atrib: TIPO . VAR
   34      | TIPO . VAR '[' NUM ']'
   36 Igual: TIPO . VAR '='

    VAR  shift, and go to state 122


State 85

   18 ProgF: ProgF COM .

    $default  reduce using rule 18 (ProgF)


State 86

   19 ProgF: ProgF RETURN . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 123


State 87

   17 ProgF: ProgF ';' .

    $default  reduce using rule 17 (ProgF)


State 88

   32 CriaFun: Ltipo '{' ProgF '}' .

    $default  reduce using rule 32 (CriaFun)


State 89

   16 ProgF: ProgF Funcao . ';'

    ';'  shift, and go to state 124


State 90

   13 ProgF: ProgF Atrib . ';'

    ';'  shift, and go to state 125


State 91

   11 ProgF: ProgF Se .
   47 Se: Se . '{' Prog '}' CASO Cond
   48   | Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 40

    $default  reduce using rule 11 (ProgF)


State 92

   12 ProgF: ProgF Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 41
    '!'  shift, and go to state 20

    $default  reduce using rule 12 (ProgF)

    Cond  go to state 42


State 93

   45 Etipo: Etipo ',' TIPO VAR .

    $default  reduce using rule 45 (Etipo)


State 94

   24 Prog: Prog VAR . '=' Expr ';'
   25     | Prog VAR . '[' NUM ']' '=' Expr ';'
   30 Funcao: VAR . Lexpr

    '='  shift, and go to state 126
    '['  shift, and go to state 127
    '('  shift, and go to state 24

    Lexpr  go to state 25


State 95

   28 Prog: Prog COM .

    $default  reduce using rule 28 (Prog)


State 96

   27 Prog: Prog ';' .

    $default  reduce using rule 27 (Prog)


State 97

   47 Se: Se '{' Prog '}' . CASO Cond
   48   | Se '{' Prog '}' . SENAO
   49   | Se '{' Prog '}' .

    SENAO  shift, and go to state 128
    CASO   shift, and go to state 129

    $default  reduce using rule 49 (Se)


State 98

   26 Prog: Prog Funcao . ';'

    ';'  shift, and go to state 130


State 99

   23 Prog: Prog Atrib . ';'

    ';'  shift, and go to state 131


State 100

   21 Prog: Prog Se .
   47 Se: Se . '{' Prog '}' CASO Cond
   48   | Se . '{' Prog '}' SENAO
   49   | Se . '{' Prog '}'

    '{'  shift, and go to state 40

    $default  reduce using rule 21 (Prog)


State 101

   22 Prog: Prog Enq .
   51 Enq: Enq . Cond
   52    | Enq . '{' Prog '}'

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '{'  shift, and go to state 41
    '!'  shift, and go to state 20

    $default  reduce using rule 22 (Prog)

    Cond  go to state 42


State 102

   52 Enq: Enq '{' Prog '}' .

    $default  reduce using rule 52 (Enq)


State 103

   60 Cond: '(' Cond E Cond . ')'

    ')'  shift, and go to state 132


State 104

   61 Cond: '(' Cond OU Cond . ')'

    ')'  shift, and go to state 133


State 105

   54 Cond: '(' Expr EQ Expr . ')'

    ')'  shift, and go to state 134


State 106

   55 Cond: '(' Expr NEQ Expr . ')'

    ')'  shift, and go to state 135


State 107

   58 Cond: '(' Expr LEQ Expr . ')'

    ')'  shift, and go to state 136


State 108

   59 Cond: '(' Expr GEQ Expr . ')'

    ')'  shift, and go to state 137


State 109

   56 Cond: '(' Expr '<' Expr . ')'

    ')'  shift, and go to state 138


State 110

   57 Cond: '(' Expr '>' Expr . ')'

    ')'  shift, and go to state 139


State 111

    5 ProgG: ProgG VAR '[' NUM ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 140


State 112

   41 Eexpr: Eexpr ',' Expr .

    $default  reduce using rule 41 (Eexpr)


State 113

   34 Atrib: TIPO VAR '[' NUM ']' .

    $default  reduce using rule 34 (Atrib)


State 114

   66 Sexpr: VAR '[' Expr ']' .

    $default  reduce using rule 66 (Sexpr)


State 115

   69 Expr: '(' Expr '+' Expr . ')'

    ')'  shift, and go to state 141


State 116

   70 Expr: '(' Expr '-' Expr . ')'

    ')'  shift, and go to state 142


State 117

   71 Expr: '(' Expr '*' Expr . ')'

    ')'  shift, and go to state 143


State 118

   72 Expr: '(' Expr '/' Expr . ')'

    ')'  shift, and go to state 144


State 119

   73 Expr: '(' Expr '%' Expr . ')'

    ')'  shift, and go to state 145


State 120

   14 ProgF: ProgF VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 146


State 121

   15 ProgF: ProgF VAR '[' . NUM ']' '=' Expr ';'

    NUM  shift, and go to state 147


State 122

   33 Atrib: TIPO VAR .
   34      | TIPO VAR . '[' NUM ']'
   36 Igual: TIPO VAR . '='

    '='  shift, and go to state 53
    '['  shift, and go to state 54

    $default  reduce using rule 33 (Atrib)


State 123

   19 ProgF: ProgF RETURN Expr . ';'

    ';'  shift, and go to state 148


State 124

   16 ProgF: ProgF Funcao ';' .

    $default  reduce using rule 16 (ProgF)


State 125

   13 ProgF: ProgF Atrib ';' .

    $default  reduce using rule 13 (ProgF)


State 126

   24 Prog: Prog VAR '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 149


State 127

   25 Prog: Prog VAR '[' . NUM ']' '=' Expr ';'

    NUM  shift, and go to state 150


State 128

   48 Se: Se '{' Prog '}' SENAO .

    $default  reduce using rule 48 (Se)


State 129

   47 Se: Se '{' Prog '}' CASO . Cond

    NUM  shift, and go to state 18
    '('  shift, and go to state 19
    '!'  shift, and go to state 20

    Cond  go to state 151


State 130

   26 Prog: Prog Funcao ';' .

    $default  reduce using rule 26 (Prog)


State 131

   23 Prog: Prog Atrib ';' .

    $default  reduce using rule 23 (Prog)


State 132

   60 Cond: '(' Cond E Cond ')' .

    $default  reduce using rule 60 (Cond)


State 133

   61 Cond: '(' Cond OU Cond ')' .

    $default  reduce using rule 61 (Cond)


State 134

   54 Cond: '(' Expr EQ Expr ')' .

    $default  reduce using rule 54 (Cond)


State 135

   55 Cond: '(' Expr NEQ Expr ')' .

    $default  reduce using rule 55 (Cond)


State 136

   58 Cond: '(' Expr LEQ Expr ')' .

    $default  reduce using rule 58 (Cond)


State 137

   59 Cond: '(' Expr GEQ Expr ')' .

    $default  reduce using rule 59 (Cond)


State 138

   56 Cond: '(' Expr '<' Expr ')' .

    $default  reduce using rule 56 (Cond)


State 139

   57 Cond: '(' Expr '>' Expr ')' .

    $default  reduce using rule 57 (Cond)


State 140

    5 ProgG: ProgG VAR '[' NUM ']' '=' Expr . ';'

    ';'  shift, and go to state 152


State 141

   69 Expr: '(' Expr '+' Expr ')' .

    $default  reduce using rule 69 (Expr)


State 142

   70 Expr: '(' Expr '-' Expr ')' .

    $default  reduce using rule 70 (Expr)


State 143

   71 Expr: '(' Expr '*' Expr ')' .

    $default  reduce using rule 71 (Expr)


State 144

   72 Expr: '(' Expr '/' Expr ')' .

    $default  reduce using rule 72 (Expr)


State 145

   73 Expr: '(' Expr '%' Expr ')' .

    $default  reduce using rule 73 (Expr)


State 146

   14 ProgF: ProgF VAR '=' Expr . ';'

    ';'  shift, and go to state 153


State 147

   15 ProgF: ProgF VAR '[' NUM . ']' '=' Expr ';'

    ']'  shift, and go to state 154


State 148

   19 ProgF: ProgF RETURN Expr ';' .

    $default  reduce using rule 19 (ProgF)


State 149

   24 Prog: Prog VAR '=' Expr . ';'

    ';'  shift, and go to state 155


State 150

   25 Prog: Prog VAR '[' NUM . ']' '=' Expr ';'

    ']'  shift, and go to state 156


State 151

   47 Se: Se '{' Prog '}' CASO Cond .

    $default  reduce using rule 47 (Se)


State 152

    5 ProgG: ProgG VAR '[' NUM ']' '=' Expr ';' .

    $default  reduce using rule 5 (ProgG)


State 153

   14 ProgF: ProgF VAR '=' Expr ';' .

    $default  reduce using rule 14 (ProgF)


State 154

   15 ProgF: ProgF VAR '[' NUM ']' . '=' Expr ';'

    '='  shift, and go to state 157


State 155

   24 Prog: Prog VAR '=' Expr ';' .

    $default  reduce using rule 24 (Prog)


State 156

   25 Prog: Prog VAR '[' NUM ']' . '=' Expr ';'

    '='  shift, and go to state 158


State 157

   15 ProgF: ProgF VAR '[' NUM ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 159


State 158

   25 Prog: Prog VAR '[' NUM ']' '=' . Expr ';'

    VAR    shift, and go to state 29
    NUM    shift, and go to state 30
    FLOAT  shift, and go to state 31
    STR    shift, and go to state 32
    '('    shift, and go to state 33

    Funcao  go to state 34
    Sexpr   go to state 35
    Expr    go to state 160


State 159

   15 ProgF: ProgF VAR '[' NUM ']' '=' Expr . ';'

    ';'  shift, and go to state 161


State 160

   25 Prog: Prog VAR '[' NUM ']' '=' Expr . ';'

    ';'  shift, and go to state 162


State 161

   15 ProgF: ProgF VAR '[' NUM ']' '=' Expr ';' .

    $default  reduce using rule 15 (ProgF)


State 162

   25 Prog: Prog VAR '[' NUM ']' '=' Expr ';' .

    $default  reduce using rule 25 (Prog)
